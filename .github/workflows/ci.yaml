# This was generated by basicimg-actions-generator. Run regenerate.sh/ps1 to regenerate.
concurrency: build
jobs:
  alpine_3_17:
    name: alpine/3.17
    needs:
    - bootstrap
    permissions:
      contents: read
      packages: write
    runs-on: ubuntu-22.04
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Login to container registry
      uses: docker/login-action@v2
      with:
        password: ${{ secrets.GITHUB_TOKEN }}
        registry: ghcr.io
        username: ${{ github.actor }}
    - id: meta
      name: Generate metadata
      uses: docker/metadata-action@v4
      with:
        images: dummy
        labels: ''
    - name: Build and push image
      uses: docker/build-push-action@v4
      with:
        cache-from: type=gha
        cache-to: type=gha,mode=max
        file: ./alpine/3.17/Dockerfile
        labels: ${{ steps.meta.outputs.labels }}
        push: true
        tags: ghcr.io/basicimg/alpine:3-17,ghcr.io/basicimg/alpine:3,ghcr.io/basicimg/alpine:stable,ghcr.io/basicimg/alpine:latest
    - name: Run `basicimg-hello`
      run: docker run --rm ghcr.io/basicimg/alpine:3-17 basicimg-hello
    - name: Run test
      run: docker run --rm ghcr.io/basicimg/alpine:3-17 /bin/sh -euxc 'basicimg-install
        rust@community'
  alpine_edge:
    name: alpine/edge
    needs:
    - bootstrap
    permissions:
      contents: read
      packages: write
    runs-on: ubuntu-22.04
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Login to container registry
      uses: docker/login-action@v2
      with:
        password: ${{ secrets.GITHUB_TOKEN }}
        registry: ghcr.io
        username: ${{ github.actor }}
    - id: meta
      name: Generate metadata
      uses: docker/metadata-action@v4
      with:
        images: dummy
        labels: ''
    - name: Build and push image
      uses: docker/build-push-action@v4
      with:
        cache-from: type=gha
        cache-to: type=gha,mode=max
        file: ./alpine/edge/Dockerfile
        labels: ${{ steps.meta.outputs.labels }}
        push: true
        tags: ghcr.io/basicimg/alpine:edge
    - name: Run `basicimg-hello`
      run: docker run --rm ghcr.io/basicimg/alpine:edge basicimg-hello
    - name: Run test
      run: docker run --rm ghcr.io/basicimg/alpine:edge /bin/sh -euxc 'basicimg-install
        rust@community'
  arch:
    name: arch
    needs:
    - bootstrap
    permissions:
      contents: read
      packages: write
    runs-on: ubuntu-22.04
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Login to container registry
      uses: docker/login-action@v2
      with:
        password: ${{ secrets.GITHUB_TOKEN }}
        registry: ghcr.io
        username: ${{ github.actor }}
    - id: meta
      name: Generate metadata
      uses: docker/metadata-action@v4
      with:
        images: dummy
        labels: ''
    - name: Build and push image
      uses: docker/build-push-action@v4
      with:
        cache-from: type=gha
        cache-to: type=gha,mode=max
        file: ./arch/Dockerfile
        labels: ${{ steps.meta.outputs.labels }}
        push: true
        tags: ghcr.io/basicimg/arch:latest
    - name: Run `basicimg-hello`
      run: docker run --rm ghcr.io/basicimg/arch:latest basicimg-hello
    - name: Run test
      run: docker run --rm ghcr.io/basicimg/arch:latest /bin/sh -euxc 'basicimg-install
        rust'
  basicimg-actions-generator:
    name: basicimg-actions-generator
    needs:
    - python3_bullseye
    permissions:
      contents: read
      packages: write
    runs-on: ubuntu-22.04
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Login to container registry
      uses: docker/login-action@v2
      with:
        password: ${{ secrets.GITHUB_TOKEN }}
        registry: ghcr.io
        username: ${{ github.actor }}
    - id: meta
      name: Generate metadata
      uses: docker/metadata-action@v4
      with:
        images: dummy
        labels: ''
    - name: Build and push image
      uses: docker/build-push-action@v4
      with:
        cache-from: type=gha
        cache-to: type=gha,mode=max
        file: ./basicimg-actions-generator/Dockerfile
        labels: ${{ steps.meta.outputs.labels }}
        push: true
        tags: ghcr.io/basicimg/basicimg-actions-generator:latest
    - name: Run `basicimg-hello`
      run: docker run --rm ghcr.io/basicimg/basicimg-actions-generator:latest basicimg-hello
  bootstrap:
    name: bootstrap
    permissions:
      contents: read
      packages: write
    runs-on: ubuntu-22.04
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Login to container registry
      uses: docker/login-action@v2
      with:
        password: ${{ secrets.GITHUB_TOKEN }}
        registry: ghcr.io
        username: ${{ github.actor }}
    - id: meta
      name: Generate metadata
      uses: docker/metadata-action@v4
      with:
        images: dummy
        labels: ''
    - name: Build and push image
      uses: docker/build-push-action@v4
      with:
        cache-from: type=gha
        cache-to: type=gha,mode=max
        file: ./bootstrap/Dockerfile
        labels: ${{ steps.meta.outputs.labels }}
        push: true
        tags: ghcr.io/basicimg/bootstrap:latest
    - name: Run `basicimg-hello`
      run: docker run --rm ghcr.io/basicimg/bootstrap:latest basicimg-hello
  debian_bookworm:
    name: debian/bookworm
    needs:
    - bootstrap
    permissions:
      contents: read
      packages: write
    runs-on: ubuntu-22.04
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Login to container registry
      uses: docker/login-action@v2
      with:
        password: ${{ secrets.GITHUB_TOKEN }}
        registry: ghcr.io
        username: ${{ github.actor }}
    - id: meta
      name: Generate metadata
      uses: docker/metadata-action@v4
      with:
        images: dummy
        labels: ''
    - name: Build and push image
      uses: docker/build-push-action@v4
      with:
        cache-from: type=gha
        cache-to: type=gha,mode=max
        file: ./debian/bookworm/Dockerfile
        labels: ${{ steps.meta.outputs.labels }}
        push: true
        tags: ghcr.io/basicimg/debian:bookworm,ghcr.io/basicimg/debian:12,ghcr.io/basicimg/debian:testing
    - name: Run `basicimg-hello`
      run: docker run --rm ghcr.io/basicimg/debian:bookworm basicimg-hello
    - name: Run test
      run: docker run --rm ghcr.io/basicimg/debian:bookworm /bin/sh -euxc 'basicimg-install
        rustc'
  debian_bullseye:
    name: debian/bullseye
    needs:
    - bootstrap
    permissions:
      contents: read
      packages: write
    runs-on: ubuntu-22.04
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Login to container registry
      uses: docker/login-action@v2
      with:
        password: ${{ secrets.GITHUB_TOKEN }}
        registry: ghcr.io
        username: ${{ github.actor }}
    - id: meta
      name: Generate metadata
      uses: docker/metadata-action@v4
      with:
        images: dummy
        labels: ''
    - name: Build and push image
      uses: docker/build-push-action@v4
      with:
        cache-from: type=gha
        cache-to: type=gha,mode=max
        file: ./debian/bullseye/Dockerfile
        labels: ${{ steps.meta.outputs.labels }}
        push: true
        tags: ghcr.io/basicimg/debian:bullseye,ghcr.io/basicimg/debian:11,ghcr.io/basicimg/debian:stable,ghcr.io/basicimg/debian:latest
    - name: Run `basicimg-hello`
      run: docker run --rm ghcr.io/basicimg/debian:bullseye basicimg-hello
    - name: Run test
      run: docker run --rm ghcr.io/basicimg/debian:bullseye /bin/sh -euxc 'basicimg-install
        rustc'
  debian_buster:
    name: debian/buster
    needs:
    - bootstrap
    permissions:
      contents: read
      packages: write
    runs-on: ubuntu-22.04
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Login to container registry
      uses: docker/login-action@v2
      with:
        password: ${{ secrets.GITHUB_TOKEN }}
        registry: ghcr.io
        username: ${{ github.actor }}
    - id: meta
      name: Generate metadata
      uses: docker/metadata-action@v4
      with:
        images: dummy
        labels: ''
    - name: Build and push image
      uses: docker/build-push-action@v4
      with:
        cache-from: type=gha
        cache-to: type=gha,mode=max
        file: ./debian/buster/Dockerfile
        labels: ${{ steps.meta.outputs.labels }}
        push: true
        tags: ghcr.io/basicimg/debian:buster,ghcr.io/basicimg/debian:10,ghcr.io/basicimg/debian:oldstable
    - name: Run `basicimg-hello`
      run: docker run --rm ghcr.io/basicimg/debian:buster basicimg-hello
    - name: Run test
      run: docker run --rm ghcr.io/basicimg/debian:buster /bin/sh -euxc 'basicimg-install
        rustc'
  debian_sid:
    name: debian/sid
    needs:
    - bootstrap
    permissions:
      contents: read
      packages: write
    runs-on: ubuntu-22.04
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Login to container registry
      uses: docker/login-action@v2
      with:
        password: ${{ secrets.GITHUB_TOKEN }}
        registry: ghcr.io
        username: ${{ github.actor }}
    - id: meta
      name: Generate metadata
      uses: docker/metadata-action@v4
      with:
        images: dummy
        labels: ''
    - name: Build and push image
      uses: docker/build-push-action@v4
      with:
        cache-from: type=gha
        cache-to: type=gha,mode=max
        file: ./debian/sid/Dockerfile
        labels: ${{ steps.meta.outputs.labels }}
        push: true
        tags: ghcr.io/basicimg/debian:sid,ghcr.io/basicimg/debian:unstable
    - name: Run `basicimg-hello`
      run: docker run --rm ghcr.io/basicimg/debian:sid basicimg-hello
    - name: Run test
      run: docker run --rm ghcr.io/basicimg/debian:sid /bin/sh -euxc 'basicimg-install
        rustc'
  jdk_11_alpine-3_17:
    name: jdk/11/alpine-3.17
    needs:
    - alpine_3_17
    permissions:
      contents: read
      packages: write
    runs-on: ubuntu-22.04
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Login to container registry
      uses: docker/login-action@v2
      with:
        password: ${{ secrets.GITHUB_TOKEN }}
        registry: ghcr.io
        username: ${{ github.actor }}
    - id: meta
      name: Generate metadata
      uses: docker/metadata-action@v4
      with:
        images: dummy
        labels: ''
    - name: Build and push image
      uses: docker/build-push-action@v4
      with:
        cache-from: type=gha
        cache-to: type=gha,mode=max
        file: ./jdk/11/alpine-3.17/Dockerfile
        labels: ${{ steps.meta.outputs.labels }}
        push: true
        tags: ghcr.io/basicimg/jdk:11-alpine-3-17,ghcr.io/basicimg/jdk:11-alpine
    - name: Run `basicimg-hello`
      run: docker run --rm ghcr.io/basicimg/jdk:11-alpine-3-17 basicimg-hello
  jdk_11_alpine-edge:
    name: jdk/11/alpine-edge
    needs:
    - alpine_edge
    permissions:
      contents: read
      packages: write
    runs-on: ubuntu-22.04
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Login to container registry
      uses: docker/login-action@v2
      with:
        password: ${{ secrets.GITHUB_TOKEN }}
        registry: ghcr.io
        username: ${{ github.actor }}
    - id: meta
      name: Generate metadata
      uses: docker/metadata-action@v4
      with:
        images: dummy
        labels: ''
    - name: Build and push image
      uses: docker/build-push-action@v4
      with:
        cache-from: type=gha
        cache-to: type=gha,mode=max
        file: ./jdk/11/alpine-edge/Dockerfile
        labels: ${{ steps.meta.outputs.labels }}
        push: true
        tags: ghcr.io/basicimg/jdk:11-alpine-edge
    - name: Run `basicimg-hello`
      run: docker run --rm ghcr.io/basicimg/jdk:11-alpine-edge basicimg-hello
  jdk_11_arch:
    name: jdk/11/arch
    needs:
    - arch
    permissions:
      contents: read
      packages: write
    runs-on: ubuntu-22.04
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Login to container registry
      uses: docker/login-action@v2
      with:
        password: ${{ secrets.GITHUB_TOKEN }}
        registry: ghcr.io
        username: ${{ github.actor }}
    - id: meta
      name: Generate metadata
      uses: docker/metadata-action@v4
      with:
        images: dummy
        labels: ''
    - name: Build and push image
      uses: docker/build-push-action@v4
      with:
        cache-from: type=gha
        cache-to: type=gha,mode=max
        file: ./jdk/11/arch/Dockerfile
        labels: ${{ steps.meta.outputs.labels }}
        push: true
        tags: ghcr.io/basicimg/jdk:11-arch
    - name: Run `basicimg-hello`
      run: docker run --rm ghcr.io/basicimg/jdk:11-arch basicimg-hello
  jdk_11_bullseye:
    name: jdk/11/bullseye
    needs:
    - debian_bullseye
    permissions:
      contents: read
      packages: write
    runs-on: ubuntu-22.04
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Login to container registry
      uses: docker/login-action@v2
      with:
        password: ${{ secrets.GITHUB_TOKEN }}
        registry: ghcr.io
        username: ${{ github.actor }}
    - id: meta
      name: Generate metadata
      uses: docker/metadata-action@v4
      with:
        images: dummy
        labels: ''
    - name: Build and push image
      uses: docker/build-push-action@v4
      with:
        cache-from: type=gha
        cache-to: type=gha,mode=max
        file: ./jdk/11/bullseye/Dockerfile
        labels: ${{ steps.meta.outputs.labels }}
        push: true
        tags: ghcr.io/basicimg/jdk:11-bullseye,ghcr.io/basicimg/jdk:11-debian-stable,ghcr.io/basicimg/jdk:11-debian,ghcr.io/basicimg/jdk:11
    - name: Run `basicimg-hello`
      run: docker run --rm ghcr.io/basicimg/jdk:11-bullseye basicimg-hello
  jdk_11_jammy:
    name: jdk/11/jammy
    needs:
    - ubuntu_jammy
    permissions:
      contents: read
      packages: write
    runs-on: ubuntu-22.04
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Login to container registry
      uses: docker/login-action@v2
      with:
        password: ${{ secrets.GITHUB_TOKEN }}
        registry: ghcr.io
        username: ${{ github.actor }}
    - id: meta
      name: Generate metadata
      uses: docker/metadata-action@v4
      with:
        images: dummy
        labels: ''
    - name: Build and push image
      uses: docker/build-push-action@v4
      with:
        cache-from: type=gha
        cache-to: type=gha,mode=max
        file: ./jdk/11/jammy/Dockerfile
        labels: ${{ steps.meta.outputs.labels }}
        push: true
        tags: ghcr.io/basicimg/jdk:11-jammy,ghcr.io/basicimg/jdk:11-ubuntu-lts,ghcr.io/basicimg/jdk:11-ubuntu
    - name: Run `basicimg-hello`
      run: docker run --rm ghcr.io/basicimg/jdk:11-jammy basicimg-hello
  jdk_11_kinetic:
    name: jdk/11/kinetic
    needs:
    - ubuntu_kinetic
    permissions:
      contents: read
      packages: write
    runs-on: ubuntu-22.04
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Login to container registry
      uses: docker/login-action@v2
      with:
        password: ${{ secrets.GITHUB_TOKEN }}
        registry: ghcr.io
        username: ${{ github.actor }}
    - id: meta
      name: Generate metadata
      uses: docker/metadata-action@v4
      with:
        images: dummy
        labels: ''
    - name: Build and push image
      uses: docker/build-push-action@v4
      with:
        cache-from: type=gha
        cache-to: type=gha,mode=max
        file: ./jdk/11/kinetic/Dockerfile
        labels: ${{ steps.meta.outputs.labels }}
        push: true
        tags: ghcr.io/basicimg/jdk:11-kinetic,ghcr.io/basicimg/jdk:11-ubuntu-interim
    - name: Run `basicimg-hello`
      run: docker run --rm ghcr.io/basicimg/jdk:11-kinetic basicimg-hello
  jdk_11_lunar:
    name: jdk/11/lunar
    needs:
    - ubuntu_lunar
    permissions:
      contents: read
      packages: write
    runs-on: ubuntu-22.04
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Login to container registry
      uses: docker/login-action@v2
      with:
        password: ${{ secrets.GITHUB_TOKEN }}
        registry: ghcr.io
        username: ${{ github.actor }}
    - id: meta
      name: Generate metadata
      uses: docker/metadata-action@v4
      with:
        images: dummy
        labels: ''
    - name: Build and push image
      uses: docker/build-push-action@v4
      with:
        cache-from: type=gha
        cache-to: type=gha,mode=max
        file: ./jdk/11/lunar/Dockerfile
        labels: ${{ steps.meta.outputs.labels }}
        push: true
        tags: ghcr.io/basicimg/jdk:11-lunar
    - name: Run `basicimg-hello`
      run: docker run --rm ghcr.io/basicimg/jdk:11-lunar basicimg-hello
  jdk_11_sid:
    name: jdk/11/sid
    needs:
    - debian_sid
    permissions:
      contents: read
      packages: write
    runs-on: ubuntu-22.04
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Login to container registry
      uses: docker/login-action@v2
      with:
        password: ${{ secrets.GITHUB_TOKEN }}
        registry: ghcr.io
        username: ${{ github.actor }}
    - id: meta
      name: Generate metadata
      uses: docker/metadata-action@v4
      with:
        images: dummy
        labels: ''
    - name: Build and push image
      uses: docker/build-push-action@v4
      with:
        cache-from: type=gha
        cache-to: type=gha,mode=max
        file: ./jdk/11/sid/Dockerfile
        labels: ${{ steps.meta.outputs.labels }}
        push: true
        tags: ghcr.io/basicimg/jdk:11-sid,ghcr.io/basicimg/jdk:11-debian-unstable
    - name: Run `basicimg-hello`
      run: docker run --rm ghcr.io/basicimg/jdk:11-sid basicimg-hello
  jdk_11_void-glibc:
    name: jdk/11/void-glibc
    needs:
    - void_glibc
    permissions:
      contents: read
      packages: write
    runs-on: ubuntu-22.04
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Login to container registry
      uses: docker/login-action@v2
      with:
        password: ${{ secrets.GITHUB_TOKEN }}
        registry: ghcr.io
        username: ${{ github.actor }}
    - id: meta
      name: Generate metadata
      uses: docker/metadata-action@v4
      with:
        images: dummy
        labels: ''
    - name: Build and push image
      uses: docker/build-push-action@v4
      with:
        cache-from: type=gha
        cache-to: type=gha,mode=max
        file: ./jdk/11/void-glibc/Dockerfile
        labels: ${{ steps.meta.outputs.labels }}
        push: true
        tags: ghcr.io/basicimg/jdk:11-void-glibc,ghcr.io/basicimg/jdk:11-void
    - name: Run `basicimg-hello`
      run: docker run --rm ghcr.io/basicimg/jdk:11-void-glibc basicimg-hello
  jdk_11_void-musl:
    name: jdk/11/void-musl
    needs:
    - void_musl
    permissions:
      contents: read
      packages: write
    runs-on: ubuntu-22.04
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Login to container registry
      uses: docker/login-action@v2
      with:
        password: ${{ secrets.GITHUB_TOKEN }}
        registry: ghcr.io
        username: ${{ github.actor }}
    - id: meta
      name: Generate metadata
      uses: docker/metadata-action@v4
      with:
        images: dummy
        labels: ''
    - name: Build and push image
      uses: docker/build-push-action@v4
      with:
        cache-from: type=gha
        cache-to: type=gha,mode=max
        file: ./jdk/11/void-musl/Dockerfile
        labels: ${{ steps.meta.outputs.labels }}
        push: true
        tags: ghcr.io/basicimg/jdk:11-void-musl
    - name: Run `basicimg-hello`
      run: docker run --rm ghcr.io/basicimg/jdk:11-void-musl basicimg-hello
  jdk_17_arch:
    name: jdk/17/arch
    needs:
    - arch
    permissions:
      contents: read
      packages: write
    runs-on: ubuntu-22.04
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Login to container registry
      uses: docker/login-action@v2
      with:
        password: ${{ secrets.GITHUB_TOKEN }}
        registry: ghcr.io
        username: ${{ github.actor }}
    - id: meta
      name: Generate metadata
      uses: docker/metadata-action@v4
      with:
        images: dummy
        labels: ''
    - name: Build and push image
      uses: docker/build-push-action@v4
      with:
        cache-from: type=gha
        cache-to: type=gha,mode=max
        file: ./jdk/17/arch/Dockerfile
        labels: ${{ steps.meta.outputs.labels }}
        push: true
        tags: ghcr.io/basicimg/jdk:17-arch
    - name: Run `basicimg-hello`
      run: docker run --rm ghcr.io/basicimg/jdk:17-arch basicimg-hello
  jdk_17_sid:
    name: jdk/17/sid
    needs:
    - debian_sid
    permissions:
      contents: read
      packages: write
    runs-on: ubuntu-22.04
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Login to container registry
      uses: docker/login-action@v2
      with:
        password: ${{ secrets.GITHUB_TOKEN }}
        registry: ghcr.io
        username: ${{ github.actor }}
    - id: meta
      name: Generate metadata
      uses: docker/metadata-action@v4
      with:
        images: dummy
        labels: ''
    - name: Build and push image
      uses: docker/build-push-action@v4
      with:
        cache-from: type=gha
        cache-to: type=gha,mode=max
        file: ./jdk/17/sid/Dockerfile
        labels: ${{ steps.meta.outputs.labels }}
        push: true
        tags: ghcr.io/basicimg/jdk:17-sid,ghcr.io/basicimg/jdk:17-debian-unstable
    - name: Run `basicimg-hello`
      run: docker run --rm ghcr.io/basicimg/jdk:17-sid basicimg-hello
  jdk_8_alpine-3_17:
    name: jdk/8/alpine-3.17
    needs:
    - alpine_3_17
    permissions:
      contents: read
      packages: write
    runs-on: ubuntu-22.04
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Login to container registry
      uses: docker/login-action@v2
      with:
        password: ${{ secrets.GITHUB_TOKEN }}
        registry: ghcr.io
        username: ${{ github.actor }}
    - id: meta
      name: Generate metadata
      uses: docker/metadata-action@v4
      with:
        images: dummy
        labels: ''
    - name: Build and push image
      uses: docker/build-push-action@v4
      with:
        cache-from: type=gha
        cache-to: type=gha,mode=max
        file: ./jdk/8/alpine-3.17/Dockerfile
        labels: ${{ steps.meta.outputs.labels }}
        push: true
        tags: ghcr.io/basicimg/jdk:8-alpine-3-17,ghcr.io/basicimg/jdk:8-alpine
    - name: Run `basicimg-hello`
      run: docker run --rm ghcr.io/basicimg/jdk:8-alpine-3-17 basicimg-hello
  jdk_8_alpine-edge:
    name: jdk/8/alpine-edge
    needs:
    - alpine_edge
    permissions:
      contents: read
      packages: write
    runs-on: ubuntu-22.04
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Login to container registry
      uses: docker/login-action@v2
      with:
        password: ${{ secrets.GITHUB_TOKEN }}
        registry: ghcr.io
        username: ${{ github.actor }}
    - id: meta
      name: Generate metadata
      uses: docker/metadata-action@v4
      with:
        images: dummy
        labels: ''
    - name: Build and push image
      uses: docker/build-push-action@v4
      with:
        cache-from: type=gha
        cache-to: type=gha,mode=max
        file: ./jdk/8/alpine-edge/Dockerfile
        labels: ${{ steps.meta.outputs.labels }}
        push: true
        tags: ghcr.io/basicimg/jdk:8-alpine-edge
    - name: Run `basicimg-hello`
      run: docker run --rm ghcr.io/basicimg/jdk:8-alpine-edge basicimg-hello
  jdk_8_arch:
    name: jdk/8/arch
    needs:
    - arch
    permissions:
      contents: read
      packages: write
    runs-on: ubuntu-22.04
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Login to container registry
      uses: docker/login-action@v2
      with:
        password: ${{ secrets.GITHUB_TOKEN }}
        registry: ghcr.io
        username: ${{ github.actor }}
    - id: meta
      name: Generate metadata
      uses: docker/metadata-action@v4
      with:
        images: dummy
        labels: ''
    - name: Build and push image
      uses: docker/build-push-action@v4
      with:
        cache-from: type=gha
        cache-to: type=gha,mode=max
        file: ./jdk/8/arch/Dockerfile
        labels: ${{ steps.meta.outputs.labels }}
        push: true
        tags: ghcr.io/basicimg/jdk:8-arch
    - name: Run `basicimg-hello`
      run: docker run --rm ghcr.io/basicimg/jdk:8-arch basicimg-hello
  jdk_8_jammy:
    name: jdk/8/jammy
    needs:
    - ubuntu_jammy
    permissions:
      contents: read
      packages: write
    runs-on: ubuntu-22.04
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Login to container registry
      uses: docker/login-action@v2
      with:
        password: ${{ secrets.GITHUB_TOKEN }}
        registry: ghcr.io
        username: ${{ github.actor }}
    - id: meta
      name: Generate metadata
      uses: docker/metadata-action@v4
      with:
        images: dummy
        labels: ''
    - name: Build and push image
      uses: docker/build-push-action@v4
      with:
        cache-from: type=gha
        cache-to: type=gha,mode=max
        file: ./jdk/8/jammy/Dockerfile
        labels: ${{ steps.meta.outputs.labels }}
        push: true
        tags: ghcr.io/basicimg/jdk:8-jammy,ghcr.io/basicimg/jdk:8-ubuntu-lts,ghcr.io/basicimg/jdk:8-ubuntu,ghcr.io/basicimg/jdk:8
    - name: Run `basicimg-hello`
      run: docker run --rm ghcr.io/basicimg/jdk:8-jammy basicimg-hello
  jdk_8_kinetic:
    name: jdk/8/kinetic
    needs:
    - ubuntu_kinetic
    permissions:
      contents: read
      packages: write
    runs-on: ubuntu-22.04
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Login to container registry
      uses: docker/login-action@v2
      with:
        password: ${{ secrets.GITHUB_TOKEN }}
        registry: ghcr.io
        username: ${{ github.actor }}
    - id: meta
      name: Generate metadata
      uses: docker/metadata-action@v4
      with:
        images: dummy
        labels: ''
    - name: Build and push image
      uses: docker/build-push-action@v4
      with:
        cache-from: type=gha
        cache-to: type=gha,mode=max
        file: ./jdk/8/kinetic/Dockerfile
        labels: ${{ steps.meta.outputs.labels }}
        push: true
        tags: ghcr.io/basicimg/jdk:8-kinetic,ghcr.io/basicimg/jdk:8-ubuntu-interim
    - name: Run `basicimg-hello`
      run: docker run --rm ghcr.io/basicimg/jdk:8-kinetic basicimg-hello
  jdk_8_lunar:
    name: jdk/8/lunar
    needs:
    - ubuntu_lunar
    permissions:
      contents: read
      packages: write
    runs-on: ubuntu-22.04
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Login to container registry
      uses: docker/login-action@v2
      with:
        password: ${{ secrets.GITHUB_TOKEN }}
        registry: ghcr.io
        username: ${{ github.actor }}
    - id: meta
      name: Generate metadata
      uses: docker/metadata-action@v4
      with:
        images: dummy
        labels: ''
    - name: Build and push image
      uses: docker/build-push-action@v4
      with:
        cache-from: type=gha
        cache-to: type=gha,mode=max
        file: ./jdk/8/lunar/Dockerfile
        labels: ${{ steps.meta.outputs.labels }}
        push: true
        tags: ghcr.io/basicimg/jdk:8-lunar
    - name: Run `basicimg-hello`
      run: docker run --rm ghcr.io/basicimg/jdk:8-lunar basicimg-hello
  jdk_8_sid:
    name: jdk/8/sid
    needs:
    - debian_sid
    permissions:
      contents: read
      packages: write
    runs-on: ubuntu-22.04
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Login to container registry
      uses: docker/login-action@v2
      with:
        password: ${{ secrets.GITHUB_TOKEN }}
        registry: ghcr.io
        username: ${{ github.actor }}
    - id: meta
      name: Generate metadata
      uses: docker/metadata-action@v4
      with:
        images: dummy
        labels: ''
    - name: Build and push image
      uses: docker/build-push-action@v4
      with:
        cache-from: type=gha
        cache-to: type=gha,mode=max
        file: ./jdk/8/sid/Dockerfile
        labels: ${{ steps.meta.outputs.labels }}
        push: true
        tags: ghcr.io/basicimg/jdk:8-sid,ghcr.io/basicimg/jdk:8-debian-unstable
    - name: Run `basicimg-hello`
      run: docker run --rm ghcr.io/basicimg/jdk:8-sid basicimg-hello
  jdk_8_void-glibc:
    name: jdk/8/void-glibc
    needs:
    - void_glibc
    permissions:
      contents: read
      packages: write
    runs-on: ubuntu-22.04
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Login to container registry
      uses: docker/login-action@v2
      with:
        password: ${{ secrets.GITHUB_TOKEN }}
        registry: ghcr.io
        username: ${{ github.actor }}
    - id: meta
      name: Generate metadata
      uses: docker/metadata-action@v4
      with:
        images: dummy
        labels: ''
    - name: Build and push image
      uses: docker/build-push-action@v4
      with:
        cache-from: type=gha
        cache-to: type=gha,mode=max
        file: ./jdk/8/void-glibc/Dockerfile
        labels: ${{ steps.meta.outputs.labels }}
        push: true
        tags: ghcr.io/basicimg/jdk:8-void-glibc,ghcr.io/basicimg/jdk:8-void
    - name: Run `basicimg-hello`
      run: docker run --rm ghcr.io/basicimg/jdk:8-void-glibc basicimg-hello
  jdk_8_void-musl:
    name: jdk/8/void-musl
    needs:
    - void_musl
    permissions:
      contents: read
      packages: write
    runs-on: ubuntu-22.04
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Login to container registry
      uses: docker/login-action@v2
      with:
        password: ${{ secrets.GITHUB_TOKEN }}
        registry: ghcr.io
        username: ${{ github.actor }}
    - id: meta
      name: Generate metadata
      uses: docker/metadata-action@v4
      with:
        images: dummy
        labels: ''
    - name: Build and push image
      uses: docker/build-push-action@v4
      with:
        cache-from: type=gha
        cache-to: type=gha,mode=max
        file: ./jdk/8/void-musl/Dockerfile
        labels: ${{ steps.meta.outputs.labels }}
        push: true
        tags: ghcr.io/basicimg/jdk:8-void-musl
    - name: Run `basicimg-hello`
      run: docker run --rm ghcr.io/basicimg/jdk:8-void-musl basicimg-hello
  jdk_latest_alpine-3_17:
    name: jdk/latest/alpine-3.17
    needs:
    - alpine_3_17
    permissions:
      contents: read
      packages: write
    runs-on: ubuntu-22.04
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Login to container registry
      uses: docker/login-action@v2
      with:
        password: ${{ secrets.GITHUB_TOKEN }}
        registry: ghcr.io
        username: ${{ github.actor }}
    - id: meta
      name: Generate metadata
      uses: docker/metadata-action@v4
      with:
        images: dummy
        labels: ''
    - name: Build and push image
      uses: docker/build-push-action@v4
      with:
        cache-from: type=gha
        cache-to: type=gha,mode=max
        file: ./jdk/latest/alpine-3.17/Dockerfile
        labels: ${{ steps.meta.outputs.labels }}
        push: true
        tags: ghcr.io/basicimg/jdk:latest-alpine-3-17,ghcr.io/basicimg/jdk:latest-alpine,ghcr.io/basicimg/jdk:17-alpine-3-17,ghcr.io/basicimg/jdk:17-alpine
    - name: Run `basicimg-hello`
      run: docker run --rm ghcr.io/basicimg/jdk:latest-alpine-3-17 basicimg-hello
  jdk_latest_alpine-edge:
    name: jdk/latest/alpine-edge
    needs:
    - alpine_edge
    permissions:
      contents: read
      packages: write
    runs-on: ubuntu-22.04
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Login to container registry
      uses: docker/login-action@v2
      with:
        password: ${{ secrets.GITHUB_TOKEN }}
        registry: ghcr.io
        username: ${{ github.actor }}
    - id: meta
      name: Generate metadata
      uses: docker/metadata-action@v4
      with:
        images: dummy
        labels: ''
    - name: Build and push image
      uses: docker/build-push-action@v4
      with:
        cache-from: type=gha
        cache-to: type=gha,mode=max
        file: ./jdk/latest/alpine-edge/Dockerfile
        labels: ${{ steps.meta.outputs.labels }}
        push: true
        tags: ghcr.io/basicimg/jdk:latest-alpine-edge,ghcr.io/basicimg/jdk:17-alpine-edge
    - name: Run `basicimg-hello`
      run: docker run --rm ghcr.io/basicimg/jdk:latest-alpine-edge basicimg-hello
  jdk_latest_arch:
    name: jdk/latest/arch
    needs:
    - arch
    permissions:
      contents: read
      packages: write
    runs-on: ubuntu-22.04
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Login to container registry
      uses: docker/login-action@v2
      with:
        password: ${{ secrets.GITHUB_TOKEN }}
        registry: ghcr.io
        username: ${{ github.actor }}
    - id: meta
      name: Generate metadata
      uses: docker/metadata-action@v4
      with:
        images: dummy
        labels: ''
    - name: Build and push image
      uses: docker/build-push-action@v4
      with:
        cache-from: type=gha
        cache-to: type=gha,mode=max
        file: ./jdk/latest/arch/Dockerfile
        labels: ${{ steps.meta.outputs.labels }}
        push: true
        tags: ghcr.io/basicimg/jdk:latest-arch
    - name: Run `basicimg-hello`
      run: docker run --rm ghcr.io/basicimg/jdk:latest-arch basicimg-hello
  jdk_latest_bookworm:
    name: jdk/latest/bookworm
    needs:
    - debian_bookworm
    permissions:
      contents: read
      packages: write
    runs-on: ubuntu-22.04
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Login to container registry
      uses: docker/login-action@v2
      with:
        password: ${{ secrets.GITHUB_TOKEN }}
        registry: ghcr.io
        username: ${{ github.actor }}
    - id: meta
      name: Generate metadata
      uses: docker/metadata-action@v4
      with:
        images: dummy
        labels: ''
    - name: Build and push image
      uses: docker/build-push-action@v4
      with:
        cache-from: type=gha
        cache-to: type=gha,mode=max
        file: ./jdk/latest/bookworm/Dockerfile
        labels: ${{ steps.meta.outputs.labels }}
        push: true
        tags: ghcr.io/basicimg/jdk:latest-bookworm,ghcr.io/basicimg/jdk:latest-debian-testing,ghcr.io/basicimg/jdk:17-bookworm,ghcr.io/basicimg/jdk:17-debian-testing
    - name: Run `basicimg-hello`
      run: docker run --rm ghcr.io/basicimg/jdk:latest-bookworm basicimg-hello
  jdk_latest_bullseye:
    name: jdk/latest/bullseye
    needs:
    - debian_bullseye
    permissions:
      contents: read
      packages: write
    runs-on: ubuntu-22.04
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Login to container registry
      uses: docker/login-action@v2
      with:
        password: ${{ secrets.GITHUB_TOKEN }}
        registry: ghcr.io
        username: ${{ github.actor }}
    - id: meta
      name: Generate metadata
      uses: docker/metadata-action@v4
      with:
        images: dummy
        labels: ''
    - name: Build and push image
      uses: docker/build-push-action@v4
      with:
        cache-from: type=gha
        cache-to: type=gha,mode=max
        file: ./jdk/latest/bullseye/Dockerfile
        labels: ${{ steps.meta.outputs.labels }}
        push: true
        tags: ghcr.io/basicimg/jdk:latest-bullseye,ghcr.io/basicimg/jdk:latest-debian-stable,ghcr.io/basicimg/jdk:latest-debian,ghcr.io/basicimg/jdk:17-bullseye,ghcr.io/basicimg/jdk:17-debian-stable,ghcr.io/basicimg/jdk:17-debian,ghcr.io/basicimg/jdk:17
    - name: Run `basicimg-hello`
      run: docker run --rm ghcr.io/basicimg/jdk:latest-bullseye basicimg-hello
  jdk_latest_buster:
    name: jdk/latest/buster
    needs:
    - debian_buster
    permissions:
      contents: read
      packages: write
    runs-on: ubuntu-22.04
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Login to container registry
      uses: docker/login-action@v2
      with:
        password: ${{ secrets.GITHUB_TOKEN }}
        registry: ghcr.io
        username: ${{ github.actor }}
    - id: meta
      name: Generate metadata
      uses: docker/metadata-action@v4
      with:
        images: dummy
        labels: ''
    - name: Build and push image
      uses: docker/build-push-action@v4
      with:
        cache-from: type=gha
        cache-to: type=gha,mode=max
        file: ./jdk/latest/buster/Dockerfile
        labels: ${{ steps.meta.outputs.labels }}
        push: true
        tags: ghcr.io/basicimg/jdk:latest-buster,ghcr.io/basicimg/jdk:latest-debian-oldstable,ghcr.io/basicimg/jdk:11-buster,ghcr.io/basicimg/jdk:11-debian-oldstable
    - name: Run `basicimg-hello`
      run: docker run --rm ghcr.io/basicimg/jdk:latest-buster basicimg-hello
  jdk_latest_jammy:
    name: jdk/latest/jammy
    needs:
    - ubuntu_jammy
    permissions:
      contents: read
      packages: write
    runs-on: ubuntu-22.04
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Login to container registry
      uses: docker/login-action@v2
      with:
        password: ${{ secrets.GITHUB_TOKEN }}
        registry: ghcr.io
        username: ${{ github.actor }}
    - id: meta
      name: Generate metadata
      uses: docker/metadata-action@v4
      with:
        images: dummy
        labels: ''
    - name: Build and push image
      uses: docker/build-push-action@v4
      with:
        cache-from: type=gha
        cache-to: type=gha,mode=max
        file: ./jdk/latest/jammy/Dockerfile
        labels: ${{ steps.meta.outputs.labels }}
        push: true
        tags: ghcr.io/basicimg/jdk:latest-jammy,ghcr.io/basicimg/jdk:latest-ubuntu-lts,ghcr.io/basicimg/jdk:latest-ubuntu,ghcr.io/basicimg/jdk:17-jammy,ghcr.io/basicimg/jdk:17-ubuntu-lts,ghcr.io/basicimg/jdk:17-ubuntu
    - name: Run `basicimg-hello`
      run: docker run --rm ghcr.io/basicimg/jdk:latest-jammy basicimg-hello
  jdk_latest_kinetic:
    name: jdk/latest/kinetic
    needs:
    - ubuntu_kinetic
    permissions:
      contents: read
      packages: write
    runs-on: ubuntu-22.04
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Login to container registry
      uses: docker/login-action@v2
      with:
        password: ${{ secrets.GITHUB_TOKEN }}
        registry: ghcr.io
        username: ${{ github.actor }}
    - id: meta
      name: Generate metadata
      uses: docker/metadata-action@v4
      with:
        images: dummy
        labels: ''
    - name: Build and push image
      uses: docker/build-push-action@v4
      with:
        cache-from: type=gha
        cache-to: type=gha,mode=max
        file: ./jdk/latest/kinetic/Dockerfile
        labels: ${{ steps.meta.outputs.labels }}
        push: true
        tags: ghcr.io/basicimg/jdk:latest-kinetic,ghcr.io/basicimg/jdk:latest-ubuntu-interim,ghcr.io/basicimg/jdk:17-kinetic,ghcr.io/basicimg/jdk:17-ubuntu-interim
    - name: Run `basicimg-hello`
      run: docker run --rm ghcr.io/basicimg/jdk:latest-kinetic basicimg-hello
  jdk_latest_lunar:
    name: jdk/latest/lunar
    needs:
    - ubuntu_lunar
    permissions:
      contents: read
      packages: write
    runs-on: ubuntu-22.04
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Login to container registry
      uses: docker/login-action@v2
      with:
        password: ${{ secrets.GITHUB_TOKEN }}
        registry: ghcr.io
        username: ${{ github.actor }}
    - id: meta
      name: Generate metadata
      uses: docker/metadata-action@v4
      with:
        images: dummy
        labels: ''
    - name: Build and push image
      uses: docker/build-push-action@v4
      with:
        cache-from: type=gha
        cache-to: type=gha,mode=max
        file: ./jdk/latest/lunar/Dockerfile
        labels: ${{ steps.meta.outputs.labels }}
        push: true
        tags: ghcr.io/basicimg/jdk:17-lunar
    - name: Run `basicimg-hello`
      run: docker run --rm ghcr.io/basicimg/jdk:17-lunar basicimg-hello
  jdk_latest_sid:
    name: jdk/latest/sid
    needs:
    - debian_sid
    permissions:
      contents: read
      packages: write
    runs-on: ubuntu-22.04
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Login to container registry
      uses: docker/login-action@v2
      with:
        password: ${{ secrets.GITHUB_TOKEN }}
        registry: ghcr.io
        username: ${{ github.actor }}
    - id: meta
      name: Generate metadata
      uses: docker/metadata-action@v4
      with:
        images: dummy
        labels: ''
    - name: Build and push image
      uses: docker/build-push-action@v4
      with:
        cache-from: type=gha
        cache-to: type=gha,mode=max
        file: ./jdk/latest/sid/Dockerfile
        labels: ${{ steps.meta.outputs.labels }}
        push: true
        tags: ghcr.io/basicimg/jdk:latest-sid,ghcr.io/basicimg/jdk:latest-debian-unstable,ghcr.io/basicimg/jdk:19-sid,ghcr.io/basicimg/jdk:19-debian-unstable,ghcr.io/basicimg/jdk:19
    - name: Run `basicimg-hello`
      run: docker run --rm ghcr.io/basicimg/jdk:latest-sid basicimg-hello
  jdk_latest_void-glibc:
    name: jdk/latest/void-glibc
    needs:
    - void_glibc
    permissions:
      contents: read
      packages: write
    runs-on: ubuntu-22.04
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Login to container registry
      uses: docker/login-action@v2
      with:
        password: ${{ secrets.GITHUB_TOKEN }}
        registry: ghcr.io
        username: ${{ github.actor }}
    - id: meta
      name: Generate metadata
      uses: docker/metadata-action@v4
      with:
        images: dummy
        labels: ''
    - name: Build and push image
      uses: docker/build-push-action@v4
      with:
        cache-from: type=gha
        cache-to: type=gha,mode=max
        file: ./jdk/latest/void-glibc/Dockerfile
        labels: ${{ steps.meta.outputs.labels }}
        push: true
        tags: ghcr.io/basicimg/jdk:latest-void-glibc,ghcr.io/basicimg/jdk:latest-void,ghcr.io/basicimg/jdk:17-void-glibc,ghcr.io/basicimg/jdk:17-void
    - name: Run `basicimg-hello`
      run: docker run --rm ghcr.io/basicimg/jdk:latest-void-glibc basicimg-hello
  jdk_latest_void-musl:
    name: jdk/latest/void-musl
    needs:
    - void_musl
    permissions:
      contents: read
      packages: write
    runs-on: ubuntu-22.04
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Login to container registry
      uses: docker/login-action@v2
      with:
        password: ${{ secrets.GITHUB_TOKEN }}
        registry: ghcr.io
        username: ${{ github.actor }}
    - id: meta
      name: Generate metadata
      uses: docker/metadata-action@v4
      with:
        images: dummy
        labels: ''
    - name: Build and push image
      uses: docker/build-push-action@v4
      with:
        cache-from: type=gha
        cache-to: type=gha,mode=max
        file: ./jdk/latest/void-musl/Dockerfile
        labels: ${{ steps.meta.outputs.labels }}
        push: true
        tags: ghcr.io/basicimg/jdk:latest-void-musl,ghcr.io/basicimg/jdk:17-void-musl
    - name: Run `basicimg-hello`
      run: docker run --rm ghcr.io/basicimg/jdk:latest-void-musl basicimg-hello
  memcached_alpine-3_17:
    name: memcached/alpine-3.17
    needs:
    - alpine_3_17
    permissions:
      contents: read
      packages: write
    runs-on: ubuntu-22.04
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Login to container registry
      uses: docker/login-action@v2
      with:
        password: ${{ secrets.GITHUB_TOKEN }}
        registry: ghcr.io
        username: ${{ github.actor }}
    - id: meta
      name: Generate metadata
      uses: docker/metadata-action@v4
      with:
        images: dummy
        labels: ''
    - name: Build and push image
      uses: docker/build-push-action@v4
      with:
        cache-from: type=gha
        cache-to: type=gha,mode=max
        file: ./memcached/alpine-3.17/Dockerfile
        labels: ${{ steps.meta.outputs.labels }}
        push: true
        tags: ghcr.io/basicimg/memcached:alpine-3-17,ghcr.io/basicimg/memcached:alpine
    - name: Run `basicimg-hello`
      run: docker run --rm ghcr.io/basicimg/memcached:alpine-3-17 basicimg-hello
  memcached_alpine-edge:
    name: memcached/alpine-edge
    needs:
    - alpine_edge
    permissions:
      contents: read
      packages: write
    runs-on: ubuntu-22.04
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Login to container registry
      uses: docker/login-action@v2
      with:
        password: ${{ secrets.GITHUB_TOKEN }}
        registry: ghcr.io
        username: ${{ github.actor }}
    - id: meta
      name: Generate metadata
      uses: docker/metadata-action@v4
      with:
        images: dummy
        labels: ''
    - name: Build and push image
      uses: docker/build-push-action@v4
      with:
        cache-from: type=gha
        cache-to: type=gha,mode=max
        file: ./memcached/alpine-edge/Dockerfile
        labels: ${{ steps.meta.outputs.labels }}
        push: true
        tags: ghcr.io/basicimg/memcached:alpine-edge
    - name: Run `basicimg-hello`
      run: docker run --rm ghcr.io/basicimg/memcached:alpine-edge basicimg-hello
  memcached_arch:
    name: memcached/arch
    needs:
    - arch
    permissions:
      contents: read
      packages: write
    runs-on: ubuntu-22.04
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Login to container registry
      uses: docker/login-action@v2
      with:
        password: ${{ secrets.GITHUB_TOKEN }}
        registry: ghcr.io
        username: ${{ github.actor }}
    - id: meta
      name: Generate metadata
      uses: docker/metadata-action@v4
      with:
        images: dummy
        labels: ''
    - name: Build and push image
      uses: docker/build-push-action@v4
      with:
        cache-from: type=gha
        cache-to: type=gha,mode=max
        file: ./memcached/arch/Dockerfile
        labels: ${{ steps.meta.outputs.labels }}
        push: true
        tags: ghcr.io/basicimg/memcached:arch
    - name: Run `basicimg-hello`
      run: docker run --rm ghcr.io/basicimg/memcached:arch basicimg-hello
  memcached_bookworm:
    name: memcached/bookworm
    needs:
    - debian_bookworm
    permissions:
      contents: read
      packages: write
    runs-on: ubuntu-22.04
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Login to container registry
      uses: docker/login-action@v2
      with:
        password: ${{ secrets.GITHUB_TOKEN }}
        registry: ghcr.io
        username: ${{ github.actor }}
    - id: meta
      name: Generate metadata
      uses: docker/metadata-action@v4
      with:
        images: dummy
        labels: ''
    - name: Build and push image
      uses: docker/build-push-action@v4
      with:
        cache-from: type=gha
        cache-to: type=gha,mode=max
        file: ./memcached/bookworm/Dockerfile
        labels: ${{ steps.meta.outputs.labels }}
        push: true
        tags: ghcr.io/basicimg/memcached:bookworm,ghcr.io/basicimg/memcached:debian-testing
    - name: Run `basicimg-hello`
      run: docker run --rm ghcr.io/basicimg/memcached:bookworm basicimg-hello
  memcached_bullseye:
    name: memcached/bullseye
    needs:
    - debian_bullseye
    permissions:
      contents: read
      packages: write
    runs-on: ubuntu-22.04
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Login to container registry
      uses: docker/login-action@v2
      with:
        password: ${{ secrets.GITHUB_TOKEN }}
        registry: ghcr.io
        username: ${{ github.actor }}
    - id: meta
      name: Generate metadata
      uses: docker/metadata-action@v4
      with:
        images: dummy
        labels: ''
    - name: Build and push image
      uses: docker/build-push-action@v4
      with:
        cache-from: type=gha
        cache-to: type=gha,mode=max
        file: ./memcached/bullseye/Dockerfile
        labels: ${{ steps.meta.outputs.labels }}
        push: true
        tags: ghcr.io/basicimg/memcached:bullseye,ghcr.io/basicimg/memcached:debian-stable,ghcr.io/basicimg/memcached:debian,ghcr.io/basicimg/memcached:latest
    - name: Run `basicimg-hello`
      run: docker run --rm ghcr.io/basicimg/memcached:bullseye basicimg-hello
  memcached_buster:
    name: memcached/buster
    needs:
    - debian_buster
    permissions:
      contents: read
      packages: write
    runs-on: ubuntu-22.04
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Login to container registry
      uses: docker/login-action@v2
      with:
        password: ${{ secrets.GITHUB_TOKEN }}
        registry: ghcr.io
        username: ${{ github.actor }}
    - id: meta
      name: Generate metadata
      uses: docker/metadata-action@v4
      with:
        images: dummy
        labels: ''
    - name: Build and push image
      uses: docker/build-push-action@v4
      with:
        cache-from: type=gha
        cache-to: type=gha,mode=max
        file: ./memcached/buster/Dockerfile
        labels: ${{ steps.meta.outputs.labels }}
        push: true
        tags: ghcr.io/basicimg/memcached:buster,ghcr.io/basicimg/memcached:debian-oldstable
    - name: Run `basicimg-hello`
      run: docker run --rm ghcr.io/basicimg/memcached:buster basicimg-hello
  memcached_jammy:
    name: memcached/jammy
    needs:
    - ubuntu_jammy
    permissions:
      contents: read
      packages: write
    runs-on: ubuntu-22.04
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Login to container registry
      uses: docker/login-action@v2
      with:
        password: ${{ secrets.GITHUB_TOKEN }}
        registry: ghcr.io
        username: ${{ github.actor }}
    - id: meta
      name: Generate metadata
      uses: docker/metadata-action@v4
      with:
        images: dummy
        labels: ''
    - name: Build and push image
      uses: docker/build-push-action@v4
      with:
        cache-from: type=gha
        cache-to: type=gha,mode=max
        file: ./memcached/jammy/Dockerfile
        labels: ${{ steps.meta.outputs.labels }}
        push: true
        tags: ghcr.io/basicimg/memcached:jammy,ghcr.io/basicimg/memcached:ubuntu-lts,ghcr.io/basicimg/memcached:ubuntu
    - name: Run `basicimg-hello`
      run: docker run --rm ghcr.io/basicimg/memcached:jammy basicimg-hello
  memcached_kinetic:
    name: memcached/kinetic
    needs:
    - ubuntu_kinetic
    permissions:
      contents: read
      packages: write
    runs-on: ubuntu-22.04
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Login to container registry
      uses: docker/login-action@v2
      with:
        password: ${{ secrets.GITHUB_TOKEN }}
        registry: ghcr.io
        username: ${{ github.actor }}
    - id: meta
      name: Generate metadata
      uses: docker/metadata-action@v4
      with:
        images: dummy
        labels: ''
    - name: Build and push image
      uses: docker/build-push-action@v4
      with:
        cache-from: type=gha
        cache-to: type=gha,mode=max
        file: ./memcached/kinetic/Dockerfile
        labels: ${{ steps.meta.outputs.labels }}
        push: true
        tags: ghcr.io/basicimg/memcached:kinetic,ghcr.io/basicimg/memcached:ubuntu-interim
    - name: Run `basicimg-hello`
      run: docker run --rm ghcr.io/basicimg/memcached:kinetic basicimg-hello
  memcached_lunar:
    name: memcached/lunar
    needs:
    - ubuntu_lunar
    permissions:
      contents: read
      packages: write
    runs-on: ubuntu-22.04
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Login to container registry
      uses: docker/login-action@v2
      with:
        password: ${{ secrets.GITHUB_TOKEN }}
        registry: ghcr.io
        username: ${{ github.actor }}
    - id: meta
      name: Generate metadata
      uses: docker/metadata-action@v4
      with:
        images: dummy
        labels: ''
    - name: Build and push image
      uses: docker/build-push-action@v4
      with:
        cache-from: type=gha
        cache-to: type=gha,mode=max
        file: ./memcached/lunar/Dockerfile
        labels: ${{ steps.meta.outputs.labels }}
        push: true
        tags: ghcr.io/basicimg/memcached:lunar
    - name: Run `basicimg-hello`
      run: docker run --rm ghcr.io/basicimg/memcached:lunar basicimg-hello
  memcached_sid:
    name: memcached/sid
    needs:
    - debian_sid
    permissions:
      contents: read
      packages: write
    runs-on: ubuntu-22.04
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Login to container registry
      uses: docker/login-action@v2
      with:
        password: ${{ secrets.GITHUB_TOKEN }}
        registry: ghcr.io
        username: ${{ github.actor }}
    - id: meta
      name: Generate metadata
      uses: docker/metadata-action@v4
      with:
        images: dummy
        labels: ''
    - name: Build and push image
      uses: docker/build-push-action@v4
      with:
        cache-from: type=gha
        cache-to: type=gha,mode=max
        file: ./memcached/sid/Dockerfile
        labels: ${{ steps.meta.outputs.labels }}
        push: true
        tags: ghcr.io/basicimg/memcached:sid,ghcr.io/basicimg/memcached:debian-unstable
    - name: Run `basicimg-hello`
      run: docker run --rm ghcr.io/basicimg/memcached:sid basicimg-hello
  memcached_void-glibc:
    name: memcached/void-glibc
    needs:
    - void_glibc
    permissions:
      contents: read
      packages: write
    runs-on: ubuntu-22.04
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Login to container registry
      uses: docker/login-action@v2
      with:
        password: ${{ secrets.GITHUB_TOKEN }}
        registry: ghcr.io
        username: ${{ github.actor }}
    - id: meta
      name: Generate metadata
      uses: docker/metadata-action@v4
      with:
        images: dummy
        labels: ''
    - name: Build and push image
      uses: docker/build-push-action@v4
      with:
        cache-from: type=gha
        cache-to: type=gha,mode=max
        file: ./memcached/void-glibc/Dockerfile
        labels: ${{ steps.meta.outputs.labels }}
        push: true
        tags: ghcr.io/basicimg/memcached:void-glibc,ghcr.io/basicimg/memcached:void
    - name: Run `basicimg-hello`
      run: docker run --rm ghcr.io/basicimg/memcached:void-glibc basicimg-hello
  memcached_void-musl:
    name: memcached/void-musl
    needs:
    - void_musl
    permissions:
      contents: read
      packages: write
    runs-on: ubuntu-22.04
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Login to container registry
      uses: docker/login-action@v2
      with:
        password: ${{ secrets.GITHUB_TOKEN }}
        registry: ghcr.io
        username: ${{ github.actor }}
    - id: meta
      name: Generate metadata
      uses: docker/metadata-action@v4
      with:
        images: dummy
        labels: ''
    - name: Build and push image
      uses: docker/build-push-action@v4
      with:
        cache-from: type=gha
        cache-to: type=gha,mode=max
        file: ./memcached/void-musl/Dockerfile
        labels: ${{ steps.meta.outputs.labels }}
        push: true
        tags: ghcr.io/basicimg/memcached:void-musl
    - name: Run `basicimg-hello`
      run: docker run --rm ghcr.io/basicimg/memcached:void-musl basicimg-hello
  nginx_alpine-3_17:
    name: nginx/alpine-3.17
    needs:
    - alpine_3_17
    permissions:
      contents: read
      packages: write
    runs-on: ubuntu-22.04
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Login to container registry
      uses: docker/login-action@v2
      with:
        password: ${{ secrets.GITHUB_TOKEN }}
        registry: ghcr.io
        username: ${{ github.actor }}
    - id: meta
      name: Generate metadata
      uses: docker/metadata-action@v4
      with:
        images: dummy
        labels: ''
    - name: Build and push image
      uses: docker/build-push-action@v4
      with:
        cache-from: type=gha
        cache-to: type=gha,mode=max
        file: ./nginx/alpine-3.17/Dockerfile
        labels: ${{ steps.meta.outputs.labels }}
        push: true
        tags: ghcr.io/basicimg/nginx:alpine-3-17,ghcr.io/basicimg/nginx:alpine
    - name: Run `basicimg-hello`
      run: docker run --rm ghcr.io/basicimg/nginx:alpine-3-17 basicimg-hello
  nginx_alpine-edge:
    name: nginx/alpine-edge
    needs:
    - alpine_edge
    permissions:
      contents: read
      packages: write
    runs-on: ubuntu-22.04
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Login to container registry
      uses: docker/login-action@v2
      with:
        password: ${{ secrets.GITHUB_TOKEN }}
        registry: ghcr.io
        username: ${{ github.actor }}
    - id: meta
      name: Generate metadata
      uses: docker/metadata-action@v4
      with:
        images: dummy
        labels: ''
    - name: Build and push image
      uses: docker/build-push-action@v4
      with:
        cache-from: type=gha
        cache-to: type=gha,mode=max
        file: ./nginx/alpine-edge/Dockerfile
        labels: ${{ steps.meta.outputs.labels }}
        push: true
        tags: ghcr.io/basicimg/nginx:alpine-edge
    - name: Run `basicimg-hello`
      run: docker run --rm ghcr.io/basicimg/nginx:alpine-edge basicimg-hello
  nginx_arch:
    name: nginx/arch
    needs:
    - arch
    permissions:
      contents: read
      packages: write
    runs-on: ubuntu-22.04
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Login to container registry
      uses: docker/login-action@v2
      with:
        password: ${{ secrets.GITHUB_TOKEN }}
        registry: ghcr.io
        username: ${{ github.actor }}
    - id: meta
      name: Generate metadata
      uses: docker/metadata-action@v4
      with:
        images: dummy
        labels: ''
    - name: Build and push image
      uses: docker/build-push-action@v4
      with:
        cache-from: type=gha
        cache-to: type=gha,mode=max
        file: ./nginx/arch/Dockerfile
        labels: ${{ steps.meta.outputs.labels }}
        push: true
        tags: ghcr.io/basicimg/nginx:arch
    - name: Run `basicimg-hello`
      run: docker run --rm ghcr.io/basicimg/nginx:arch basicimg-hello
  nginx_bookworm:
    name: nginx/bookworm
    needs:
    - debian_bookworm
    permissions:
      contents: read
      packages: write
    runs-on: ubuntu-22.04
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Login to container registry
      uses: docker/login-action@v2
      with:
        password: ${{ secrets.GITHUB_TOKEN }}
        registry: ghcr.io
        username: ${{ github.actor }}
    - id: meta
      name: Generate metadata
      uses: docker/metadata-action@v4
      with:
        images: dummy
        labels: ''
    - name: Build and push image
      uses: docker/build-push-action@v4
      with:
        cache-from: type=gha
        cache-to: type=gha,mode=max
        file: ./nginx/bookworm/Dockerfile
        labels: ${{ steps.meta.outputs.labels }}
        push: true
        tags: ghcr.io/basicimg/nginx:bookworm,ghcr.io/basicimg/nginx:debian-testing
    - name: Run `basicimg-hello`
      run: docker run --rm ghcr.io/basicimg/nginx:bookworm basicimg-hello
  nginx_bullseye:
    name: nginx/bullseye
    needs:
    - debian_bullseye
    permissions:
      contents: read
      packages: write
    runs-on: ubuntu-22.04
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Login to container registry
      uses: docker/login-action@v2
      with:
        password: ${{ secrets.GITHUB_TOKEN }}
        registry: ghcr.io
        username: ${{ github.actor }}
    - id: meta
      name: Generate metadata
      uses: docker/metadata-action@v4
      with:
        images: dummy
        labels: ''
    - name: Build and push image
      uses: docker/build-push-action@v4
      with:
        cache-from: type=gha
        cache-to: type=gha,mode=max
        file: ./nginx/bullseye/Dockerfile
        labels: ${{ steps.meta.outputs.labels }}
        push: true
        tags: ghcr.io/basicimg/nginx:bullseye,ghcr.io/basicimg/nginx:debian-stable,ghcr.io/basicimg/nginx:debian,ghcr.io/basicimg/nginx:latest
    - name: Run `basicimg-hello`
      run: docker run --rm ghcr.io/basicimg/nginx:bullseye basicimg-hello
  nginx_buster:
    name: nginx/buster
    needs:
    - debian_buster
    permissions:
      contents: read
      packages: write
    runs-on: ubuntu-22.04
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Login to container registry
      uses: docker/login-action@v2
      with:
        password: ${{ secrets.GITHUB_TOKEN }}
        registry: ghcr.io
        username: ${{ github.actor }}
    - id: meta
      name: Generate metadata
      uses: docker/metadata-action@v4
      with:
        images: dummy
        labels: ''
    - name: Build and push image
      uses: docker/build-push-action@v4
      with:
        cache-from: type=gha
        cache-to: type=gha,mode=max
        file: ./nginx/buster/Dockerfile
        labels: ${{ steps.meta.outputs.labels }}
        push: true
        tags: ghcr.io/basicimg/nginx:buster,ghcr.io/basicimg/nginx:debian-oldstable
    - name: Run `basicimg-hello`
      run: docker run --rm ghcr.io/basicimg/nginx:buster basicimg-hello
  nginx_jammy:
    name: nginx/jammy
    needs:
    - ubuntu_jammy
    permissions:
      contents: read
      packages: write
    runs-on: ubuntu-22.04
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Login to container registry
      uses: docker/login-action@v2
      with:
        password: ${{ secrets.GITHUB_TOKEN }}
        registry: ghcr.io
        username: ${{ github.actor }}
    - id: meta
      name: Generate metadata
      uses: docker/metadata-action@v4
      with:
        images: dummy
        labels: ''
    - name: Build and push image
      uses: docker/build-push-action@v4
      with:
        cache-from: type=gha
        cache-to: type=gha,mode=max
        file: ./nginx/jammy/Dockerfile
        labels: ${{ steps.meta.outputs.labels }}
        push: true
        tags: ghcr.io/basicimg/nginx:jammy,ghcr.io/basicimg/nginx:ubuntu-lts,ghcr.io/basicimg/nginx:ubuntu
    - name: Run `basicimg-hello`
      run: docker run --rm ghcr.io/basicimg/nginx:jammy basicimg-hello
  nginx_kinetic:
    name: nginx/kinetic
    needs:
    - ubuntu_kinetic
    permissions:
      contents: read
      packages: write
    runs-on: ubuntu-22.04
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Login to container registry
      uses: docker/login-action@v2
      with:
        password: ${{ secrets.GITHUB_TOKEN }}
        registry: ghcr.io
        username: ${{ github.actor }}
    - id: meta
      name: Generate metadata
      uses: docker/metadata-action@v4
      with:
        images: dummy
        labels: ''
    - name: Build and push image
      uses: docker/build-push-action@v4
      with:
        cache-from: type=gha
        cache-to: type=gha,mode=max
        file: ./nginx/kinetic/Dockerfile
        labels: ${{ steps.meta.outputs.labels }}
        push: true
        tags: ghcr.io/basicimg/nginx:kinetic,ghcr.io/basicimg/nginx:ubuntu-interim
    - name: Run `basicimg-hello`
      run: docker run --rm ghcr.io/basicimg/nginx:kinetic basicimg-hello
  nginx_lunar:
    name: nginx/lunar
    needs:
    - ubuntu_lunar
    permissions:
      contents: read
      packages: write
    runs-on: ubuntu-22.04
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Login to container registry
      uses: docker/login-action@v2
      with:
        password: ${{ secrets.GITHUB_TOKEN }}
        registry: ghcr.io
        username: ${{ github.actor }}
    - id: meta
      name: Generate metadata
      uses: docker/metadata-action@v4
      with:
        images: dummy
        labels: ''
    - name: Build and push image
      uses: docker/build-push-action@v4
      with:
        cache-from: type=gha
        cache-to: type=gha,mode=max
        file: ./nginx/lunar/Dockerfile
        labels: ${{ steps.meta.outputs.labels }}
        push: true
        tags: ghcr.io/basicimg/nginx:lunar
    - name: Run `basicimg-hello`
      run: docker run --rm ghcr.io/basicimg/nginx:lunar basicimg-hello
  nginx_sid:
    name: nginx/sid
    needs:
    - debian_sid
    permissions:
      contents: read
      packages: write
    runs-on: ubuntu-22.04
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Login to container registry
      uses: docker/login-action@v2
      with:
        password: ${{ secrets.GITHUB_TOKEN }}
        registry: ghcr.io
        username: ${{ github.actor }}
    - id: meta
      name: Generate metadata
      uses: docker/metadata-action@v4
      with:
        images: dummy
        labels: ''
    - name: Build and push image
      uses: docker/build-push-action@v4
      with:
        cache-from: type=gha
        cache-to: type=gha,mode=max
        file: ./nginx/sid/Dockerfile
        labels: ${{ steps.meta.outputs.labels }}
        push: true
        tags: ghcr.io/basicimg/nginx:sid,ghcr.io/basicimg/nginx:debian-unstable
    - name: Run `basicimg-hello`
      run: docker run --rm ghcr.io/basicimg/nginx:sid basicimg-hello
  nginx_void-glibc:
    name: nginx/void-glibc
    needs:
    - void_glibc
    permissions:
      contents: read
      packages: write
    runs-on: ubuntu-22.04
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Login to container registry
      uses: docker/login-action@v2
      with:
        password: ${{ secrets.GITHUB_TOKEN }}
        registry: ghcr.io
        username: ${{ github.actor }}
    - id: meta
      name: Generate metadata
      uses: docker/metadata-action@v4
      with:
        images: dummy
        labels: ''
    - name: Build and push image
      uses: docker/build-push-action@v4
      with:
        cache-from: type=gha
        cache-to: type=gha,mode=max
        file: ./nginx/void-glibc/Dockerfile
        labels: ${{ steps.meta.outputs.labels }}
        push: true
        tags: ghcr.io/basicimg/nginx:void-glibc,ghcr.io/basicimg/nginx:void
    - name: Run `basicimg-hello`
      run: docker run --rm ghcr.io/basicimg/nginx:void-glibc basicimg-hello
  nginx_void-musl:
    name: nginx/void-musl
    needs:
    - void_musl
    permissions:
      contents: read
      packages: write
    runs-on: ubuntu-22.04
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Login to container registry
      uses: docker/login-action@v2
      with:
        password: ${{ secrets.GITHUB_TOKEN }}
        registry: ghcr.io
        username: ${{ github.actor }}
    - id: meta
      name: Generate metadata
      uses: docker/metadata-action@v4
      with:
        images: dummy
        labels: ''
    - name: Build and push image
      uses: docker/build-push-action@v4
      with:
        cache-from: type=gha
        cache-to: type=gha,mode=max
        file: ./nginx/void-musl/Dockerfile
        labels: ${{ steps.meta.outputs.labels }}
        push: true
        tags: ghcr.io/basicimg/nginx:void-musl
    - name: Run `basicimg-hello`
      run: docker run --rm ghcr.io/basicimg/nginx:void-musl basicimg-hello
  nix_alpine-edge:
    name: nix/alpine-edge
    needs:
    - alpine_edge
    permissions:
      contents: read
      packages: write
    runs-on: ubuntu-22.04
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Login to container registry
      uses: docker/login-action@v2
      with:
        password: ${{ secrets.GITHUB_TOKEN }}
        registry: ghcr.io
        username: ${{ github.actor }}
    - id: meta
      name: Generate metadata
      uses: docker/metadata-action@v4
      with:
        images: dummy
        labels: ''
    - name: Build and push image
      uses: docker/build-push-action@v4
      with:
        cache-from: type=gha
        cache-to: type=gha,mode=max
        file: ./nix/alpine-edge/Dockerfile
        labels: ${{ steps.meta.outputs.labels }}
        push: true
        tags: ghcr.io/basicimg/nix:alpine-edge,ghcr.io/basicimg/nix:alpine
    - name: Run `basicimg-hello`
      run: docker run --rm ghcr.io/basicimg/nix:alpine-edge basicimg-hello
    - name: Run test
      run: docker run --rm ghcr.io/basicimg/nix:alpine-edge /bin/sh -euxc 'nix run
        nixpkgs#hello'
  nix_arch:
    name: nix/arch
    needs:
    - arch
    permissions:
      contents: read
      packages: write
    runs-on: ubuntu-22.04
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Login to container registry
      uses: docker/login-action@v2
      with:
        password: ${{ secrets.GITHUB_TOKEN }}
        registry: ghcr.io
        username: ${{ github.actor }}
    - id: meta
      name: Generate metadata
      uses: docker/metadata-action@v4
      with:
        images: dummy
        labels: ''
    - name: Build and push image
      uses: docker/build-push-action@v4
      with:
        cache-from: type=gha
        cache-to: type=gha,mode=max
        file: ./nix/arch/Dockerfile
        labels: ${{ steps.meta.outputs.labels }}
        push: true
        tags: ghcr.io/basicimg/nix:arch
    - name: Run `basicimg-hello`
      run: docker run --rm ghcr.io/basicimg/nix:arch basicimg-hello
    - name: Run test
      run: docker run --rm ghcr.io/basicimg/nix:arch /bin/sh -euxc 'nix run nixpkgs#hello'
  nix_bookworm:
    name: nix/bookworm
    needs:
    - debian_bookworm
    permissions:
      contents: read
      packages: write
    runs-on: ubuntu-22.04
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Login to container registry
      uses: docker/login-action@v2
      with:
        password: ${{ secrets.GITHUB_TOKEN }}
        registry: ghcr.io
        username: ${{ github.actor }}
    - id: meta
      name: Generate metadata
      uses: docker/metadata-action@v4
      with:
        images: dummy
        labels: ''
    - name: Build and push image
      uses: docker/build-push-action@v4
      with:
        cache-from: type=gha
        cache-to: type=gha,mode=max
        file: ./nix/bookworm/Dockerfile
        labels: ${{ steps.meta.outputs.labels }}
        push: true
        tags: ghcr.io/basicimg/nix:bookworm,ghcr.io/basicimg/nix:debian-testing
    - name: Run `basicimg-hello`
      run: docker run --rm ghcr.io/basicimg/nix:bookworm basicimg-hello
    - name: Run test
      run: docker run --rm ghcr.io/basicimg/nix:bookworm /bin/sh -euxc 'nix run nixpkgs#hello'
  nix_bullseye:
    name: nix/bullseye
    needs:
    - debian_bullseye
    permissions:
      contents: read
      packages: write
    runs-on: ubuntu-22.04
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Login to container registry
      uses: docker/login-action@v2
      with:
        password: ${{ secrets.GITHUB_TOKEN }}
        registry: ghcr.io
        username: ${{ github.actor }}
    - id: meta
      name: Generate metadata
      uses: docker/metadata-action@v4
      with:
        images: dummy
        labels: ''
    - name: Build and push image
      uses: docker/build-push-action@v4
      with:
        cache-from: type=gha
        cache-to: type=gha,mode=max
        file: ./nix/bullseye/Dockerfile
        labels: ${{ steps.meta.outputs.labels }}
        push: true
        tags: ghcr.io/basicimg/nix:bullseye,ghcr.io/basicimg/nix:debian-stable,ghcr.io/basicimg/nix:debian,ghcr.io/basicimg/nix:latest
    - name: Run `basicimg-hello`
      run: docker run --rm ghcr.io/basicimg/nix:bullseye basicimg-hello
  nix_jammy:
    name: nix/jammy
    needs:
    - ubuntu_jammy
    permissions:
      contents: read
      packages: write
    runs-on: ubuntu-22.04
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Login to container registry
      uses: docker/login-action@v2
      with:
        password: ${{ secrets.GITHUB_TOKEN }}
        registry: ghcr.io
        username: ${{ github.actor }}
    - id: meta
      name: Generate metadata
      uses: docker/metadata-action@v4
      with:
        images: dummy
        labels: ''
    - name: Build and push image
      uses: docker/build-push-action@v4
      with:
        cache-from: type=gha
        cache-to: type=gha,mode=max
        file: ./nix/jammy/Dockerfile
        labels: ${{ steps.meta.outputs.labels }}
        push: true
        tags: ghcr.io/basicimg/nix:jammy,ghcr.io/basicimg/nix:ubuntu-lts,ghcr.io/basicimg/nix:ubuntu
    - name: Run `basicimg-hello`
      run: docker run --rm ghcr.io/basicimg/nix:jammy basicimg-hello
    - name: Run test
      run: docker run --rm ghcr.io/basicimg/nix:jammy /bin/sh -euxc 'nix run nixpkgs#hello'
  nix_kinetic:
    name: nix/kinetic
    needs:
    - ubuntu_kinetic
    permissions:
      contents: read
      packages: write
    runs-on: ubuntu-22.04
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Login to container registry
      uses: docker/login-action@v2
      with:
        password: ${{ secrets.GITHUB_TOKEN }}
        registry: ghcr.io
        username: ${{ github.actor }}
    - id: meta
      name: Generate metadata
      uses: docker/metadata-action@v4
      with:
        images: dummy
        labels: ''
    - name: Build and push image
      uses: docker/build-push-action@v4
      with:
        cache-from: type=gha
        cache-to: type=gha,mode=max
        file: ./nix/kinetic/Dockerfile
        labels: ${{ steps.meta.outputs.labels }}
        push: true
        tags: ghcr.io/basicimg/nix:kinetic,ghcr.io/basicimg/nix:ubuntu-interim
    - name: Run `basicimg-hello`
      run: docker run --rm ghcr.io/basicimg/nix:kinetic basicimg-hello
    - name: Run test
      run: docker run --rm ghcr.io/basicimg/nix:kinetic /bin/sh -euxc 'nix run nixpkgs#hello'
  nix_lunar:
    name: nix/lunar
    needs:
    - ubuntu_lunar
    permissions:
      contents: read
      packages: write
    runs-on: ubuntu-22.04
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Login to container registry
      uses: docker/login-action@v2
      with:
        password: ${{ secrets.GITHUB_TOKEN }}
        registry: ghcr.io
        username: ${{ github.actor }}
    - id: meta
      name: Generate metadata
      uses: docker/metadata-action@v4
      with:
        images: dummy
        labels: ''
    - name: Build and push image
      uses: docker/build-push-action@v4
      with:
        cache-from: type=gha
        cache-to: type=gha,mode=max
        file: ./nix/lunar/Dockerfile
        labels: ${{ steps.meta.outputs.labels }}
        push: true
        tags: ghcr.io/basicimg/nix:lunar
    - name: Run `basicimg-hello`
      run: docker run --rm ghcr.io/basicimg/nix:lunar basicimg-hello
    - name: Run test
      run: docker run --rm ghcr.io/basicimg/nix:lunar /bin/sh -euxc 'nix run nixpkgs#hello'
  nix_sid:
    name: nix/sid
    needs:
    - debian_sid
    permissions:
      contents: read
      packages: write
    runs-on: ubuntu-22.04
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Login to container registry
      uses: docker/login-action@v2
      with:
        password: ${{ secrets.GITHUB_TOKEN }}
        registry: ghcr.io
        username: ${{ github.actor }}
    - id: meta
      name: Generate metadata
      uses: docker/metadata-action@v4
      with:
        images: dummy
        labels: ''
    - name: Build and push image
      uses: docker/build-push-action@v4
      with:
        cache-from: type=gha
        cache-to: type=gha,mode=max
        file: ./nix/sid/Dockerfile
        labels: ${{ steps.meta.outputs.labels }}
        push: true
        tags: ghcr.io/basicimg/nix:sid,ghcr.io/basicimg/nix:debian-unstable
    - name: Run `basicimg-hello`
      run: docker run --rm ghcr.io/basicimg/nix:sid basicimg-hello
    - name: Run test
      run: docker run --rm ghcr.io/basicimg/nix:sid /bin/sh -euxc 'nix run nixpkgs#hello'
  nix_void-glibc:
    name: nix/void-glibc
    needs:
    - void_glibc
    permissions:
      contents: read
      packages: write
    runs-on: ubuntu-22.04
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Login to container registry
      uses: docker/login-action@v2
      with:
        password: ${{ secrets.GITHUB_TOKEN }}
        registry: ghcr.io
        username: ${{ github.actor }}
    - id: meta
      name: Generate metadata
      uses: docker/metadata-action@v4
      with:
        images: dummy
        labels: ''
    - name: Build and push image
      uses: docker/build-push-action@v4
      with:
        cache-from: type=gha
        cache-to: type=gha,mode=max
        file: ./nix/void-glibc/Dockerfile
        labels: ${{ steps.meta.outputs.labels }}
        push: true
        tags: ghcr.io/basicimg/nix:void-glibc,ghcr.io/basicimg/nix:void
    - name: Run `basicimg-hello`
      run: docker run --rm ghcr.io/basicimg/nix:void-glibc basicimg-hello
    - name: Run test
      run: docker run --rm ghcr.io/basicimg/nix:void-glibc /bin/sh -euxc 'nix run
        nixpkgs#hello'
  nix_void-musl:
    name: nix/void-musl
    needs:
    - void_musl
    permissions:
      contents: read
      packages: write
    runs-on: ubuntu-22.04
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Login to container registry
      uses: docker/login-action@v2
      with:
        password: ${{ secrets.GITHUB_TOKEN }}
        registry: ghcr.io
        username: ${{ github.actor }}
    - id: meta
      name: Generate metadata
      uses: docker/metadata-action@v4
      with:
        images: dummy
        labels: ''
    - name: Build and push image
      uses: docker/build-push-action@v4
      with:
        cache-from: type=gha
        cache-to: type=gha,mode=max
        file: ./nix/void-musl/Dockerfile
        labels: ${{ steps.meta.outputs.labels }}
        push: true
        tags: ghcr.io/basicimg/nix:void-musl
    - name: Run `basicimg-hello`
      run: docker run --rm ghcr.io/basicimg/nix:void-musl basicimg-hello
    - name: Run test
      run: docker run --rm ghcr.io/basicimg/nix:void-musl /bin/sh -euxc 'nix run nixpkgs#hello'
  nodejs_alpine-3_17:
    name: nodejs/alpine-3.17
    needs:
    - alpine_3_17
    permissions:
      contents: read
      packages: write
    runs-on: ubuntu-22.04
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Login to container registry
      uses: docker/login-action@v2
      with:
        password: ${{ secrets.GITHUB_TOKEN }}
        registry: ghcr.io
        username: ${{ github.actor }}
    - id: meta
      name: Generate metadata
      uses: docker/metadata-action@v4
      with:
        images: dummy
        labels: ''
    - name: Build and push image
      uses: docker/build-push-action@v4
      with:
        cache-from: type=gha
        cache-to: type=gha,mode=max
        file: ./nodejs/alpine-3.17/Dockerfile
        labels: ${{ steps.meta.outputs.labels }}
        push: true
        tags: ghcr.io/basicimg/nodejs:alpine-3-17,ghcr.io/basicimg/nodejs:alpine
    - name: Run `basicimg-hello`
      run: docker run --rm ghcr.io/basicimg/nodejs:alpine-3-17 basicimg-hello
    - name: Run test
      run: docker run --rm ghcr.io/basicimg/nodejs:alpine-3-17 /bin/sh -euxc 'mkdir
        app && cd app && npm install express'
  nodejs_alpine-edge:
    name: nodejs/alpine-edge
    needs:
    - alpine_edge
    permissions:
      contents: read
      packages: write
    runs-on: ubuntu-22.04
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Login to container registry
      uses: docker/login-action@v2
      with:
        password: ${{ secrets.GITHUB_TOKEN }}
        registry: ghcr.io
        username: ${{ github.actor }}
    - id: meta
      name: Generate metadata
      uses: docker/metadata-action@v4
      with:
        images: dummy
        labels: ''
    - name: Build and push image
      uses: docker/build-push-action@v4
      with:
        cache-from: type=gha
        cache-to: type=gha,mode=max
        file: ./nodejs/alpine-edge/Dockerfile
        labels: ${{ steps.meta.outputs.labels }}
        push: true
        tags: ghcr.io/basicimg/nodejs:alpine-edge
    - name: Run `basicimg-hello`
      run: docker run --rm ghcr.io/basicimg/nodejs:alpine-edge basicimg-hello
    - name: Run test
      run: docker run --rm ghcr.io/basicimg/nodejs:alpine-edge /bin/sh -euxc 'mkdir
        app && cd app && npm install express'
  nodejs_arch:
    name: nodejs/arch
    needs:
    - arch
    permissions:
      contents: read
      packages: write
    runs-on: ubuntu-22.04
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Login to container registry
      uses: docker/login-action@v2
      with:
        password: ${{ secrets.GITHUB_TOKEN }}
        registry: ghcr.io
        username: ${{ github.actor }}
    - id: meta
      name: Generate metadata
      uses: docker/metadata-action@v4
      with:
        images: dummy
        labels: ''
    - name: Build and push image
      uses: docker/build-push-action@v4
      with:
        cache-from: type=gha
        cache-to: type=gha,mode=max
        file: ./nodejs/arch/Dockerfile
        labels: ${{ steps.meta.outputs.labels }}
        push: true
        tags: ghcr.io/basicimg/nodejs:arch
    - name: Run `basicimg-hello`
      run: docker run --rm ghcr.io/basicimg/nodejs:arch basicimg-hello
    - name: Run test
      run: docker run --rm ghcr.io/basicimg/nodejs:arch /bin/sh -euxc 'mkdir app &&
        cd app && npm install express'
  nodejs_bookworm:
    name: nodejs/bookworm
    needs:
    - debian_bookworm
    permissions:
      contents: read
      packages: write
    runs-on: ubuntu-22.04
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Login to container registry
      uses: docker/login-action@v2
      with:
        password: ${{ secrets.GITHUB_TOKEN }}
        registry: ghcr.io
        username: ${{ github.actor }}
    - id: meta
      name: Generate metadata
      uses: docker/metadata-action@v4
      with:
        images: dummy
        labels: ''
    - name: Build and push image
      uses: docker/build-push-action@v4
      with:
        cache-from: type=gha
        cache-to: type=gha,mode=max
        file: ./nodejs/bookworm/Dockerfile
        labels: ${{ steps.meta.outputs.labels }}
        push: true
        tags: ghcr.io/basicimg/nodejs:bookworm,ghcr.io/basicimg/nodejs:debian-testing
    - name: Run `basicimg-hello`
      run: docker run --rm ghcr.io/basicimg/nodejs:bookworm basicimg-hello
    - name: Run test
      run: docker run --rm ghcr.io/basicimg/nodejs:bookworm /bin/sh -euxc 'mkdir app
        && cd app && npm install express'
  nodejs_bullseye:
    name: nodejs/bullseye
    needs:
    - debian_bullseye
    permissions:
      contents: read
      packages: write
    runs-on: ubuntu-22.04
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Login to container registry
      uses: docker/login-action@v2
      with:
        password: ${{ secrets.GITHUB_TOKEN }}
        registry: ghcr.io
        username: ${{ github.actor }}
    - id: meta
      name: Generate metadata
      uses: docker/metadata-action@v4
      with:
        images: dummy
        labels: ''
    - name: Build and push image
      uses: docker/build-push-action@v4
      with:
        cache-from: type=gha
        cache-to: type=gha,mode=max
        file: ./nodejs/bullseye/Dockerfile
        labels: ${{ steps.meta.outputs.labels }}
        push: true
        tags: ghcr.io/basicimg/nodejs:bullseye,ghcr.io/basicimg/nodejs:debian-stable,ghcr.io/basicimg/nodejs:debian,ghcr.io/basicimg/nodejs:latest
    - name: Run `basicimg-hello`
      run: docker run --rm ghcr.io/basicimg/nodejs:bullseye basicimg-hello
    - name: Run test
      run: docker run --rm ghcr.io/basicimg/nodejs:bullseye /bin/sh -euxc 'mkdir app
        && cd app && npm install express'
  nodejs_buster:
    name: nodejs/buster
    needs:
    - debian_buster
    permissions:
      contents: read
      packages: write
    runs-on: ubuntu-22.04
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Login to container registry
      uses: docker/login-action@v2
      with:
        password: ${{ secrets.GITHUB_TOKEN }}
        registry: ghcr.io
        username: ${{ github.actor }}
    - id: meta
      name: Generate metadata
      uses: docker/metadata-action@v4
      with:
        images: dummy
        labels: ''
    - name: Build and push image
      uses: docker/build-push-action@v4
      with:
        cache-from: type=gha
        cache-to: type=gha,mode=max
        file: ./nodejs/buster/Dockerfile
        labels: ${{ steps.meta.outputs.labels }}
        push: true
        tags: ghcr.io/basicimg/nodejs:buster,ghcr.io/basicimg/nodejs:debian-oldstable
    - name: Run `basicimg-hello`
      run: docker run --rm ghcr.io/basicimg/nodejs:buster basicimg-hello
    - name: Run test
      run: docker run --rm ghcr.io/basicimg/nodejs:buster /bin/sh -euxc 'mkdir app
        && cd app && npm install express'
  nodejs_jammy:
    name: nodejs/jammy
    needs:
    - ubuntu_jammy
    permissions:
      contents: read
      packages: write
    runs-on: ubuntu-22.04
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Login to container registry
      uses: docker/login-action@v2
      with:
        password: ${{ secrets.GITHUB_TOKEN }}
        registry: ghcr.io
        username: ${{ github.actor }}
    - id: meta
      name: Generate metadata
      uses: docker/metadata-action@v4
      with:
        images: dummy
        labels: ''
    - name: Build and push image
      uses: docker/build-push-action@v4
      with:
        cache-from: type=gha
        cache-to: type=gha,mode=max
        file: ./nodejs/jammy/Dockerfile
        labels: ${{ steps.meta.outputs.labels }}
        push: true
        tags: ghcr.io/basicimg/nodejs:jammy,ghcr.io/basicimg/nodejs:ubuntu-lts,ghcr.io/basicimg/nodejs:ubuntu
    - name: Run `basicimg-hello`
      run: docker run --rm ghcr.io/basicimg/nodejs:jammy basicimg-hello
    - name: Run test
      run: docker run --rm ghcr.io/basicimg/nodejs:jammy /bin/sh -euxc 'mkdir app
        && cd app && npm install express'
  nodejs_kinetic:
    name: nodejs/kinetic
    needs:
    - ubuntu_kinetic
    permissions:
      contents: read
      packages: write
    runs-on: ubuntu-22.04
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Login to container registry
      uses: docker/login-action@v2
      with:
        password: ${{ secrets.GITHUB_TOKEN }}
        registry: ghcr.io
        username: ${{ github.actor }}
    - id: meta
      name: Generate metadata
      uses: docker/metadata-action@v4
      with:
        images: dummy
        labels: ''
    - name: Build and push image
      uses: docker/build-push-action@v4
      with:
        cache-from: type=gha
        cache-to: type=gha,mode=max
        file: ./nodejs/kinetic/Dockerfile
        labels: ${{ steps.meta.outputs.labels }}
        push: true
        tags: ghcr.io/basicimg/nodejs:kinetic,ghcr.io/basicimg/nodejs:ubuntu-interim
    - name: Run `basicimg-hello`
      run: docker run --rm ghcr.io/basicimg/nodejs:kinetic basicimg-hello
    - name: Run test
      run: docker run --rm ghcr.io/basicimg/nodejs:kinetic /bin/sh -euxc 'mkdir app
        && cd app && npm install express'
  nodejs_lunar:
    name: nodejs/lunar
    needs:
    - ubuntu_lunar
    permissions:
      contents: read
      packages: write
    runs-on: ubuntu-22.04
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Login to container registry
      uses: docker/login-action@v2
      with:
        password: ${{ secrets.GITHUB_TOKEN }}
        registry: ghcr.io
        username: ${{ github.actor }}
    - id: meta
      name: Generate metadata
      uses: docker/metadata-action@v4
      with:
        images: dummy
        labels: ''
    - name: Build and push image
      uses: docker/build-push-action@v4
      with:
        cache-from: type=gha
        cache-to: type=gha,mode=max
        file: ./nodejs/lunar/Dockerfile
        labels: ${{ steps.meta.outputs.labels }}
        push: true
        tags: ghcr.io/basicimg/nodejs:lunar
    - name: Run `basicimg-hello`
      run: docker run --rm ghcr.io/basicimg/nodejs:lunar basicimg-hello
    - name: Run test
      run: docker run --rm ghcr.io/basicimg/nodejs:lunar /bin/sh -euxc 'mkdir app
        && cd app && npm install express'
  nodejs_sid:
    name: nodejs/sid
    needs:
    - debian_sid
    permissions:
      contents: read
      packages: write
    runs-on: ubuntu-22.04
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Login to container registry
      uses: docker/login-action@v2
      with:
        password: ${{ secrets.GITHUB_TOKEN }}
        registry: ghcr.io
        username: ${{ github.actor }}
    - id: meta
      name: Generate metadata
      uses: docker/metadata-action@v4
      with:
        images: dummy
        labels: ''
    - name: Build and push image
      uses: docker/build-push-action@v4
      with:
        cache-from: type=gha
        cache-to: type=gha,mode=max
        file: ./nodejs/sid/Dockerfile
        labels: ${{ steps.meta.outputs.labels }}
        push: true
        tags: ghcr.io/basicimg/nodejs:sid,ghcr.io/basicimg/nodejs:debian-unstable
    - name: Run `basicimg-hello`
      run: docker run --rm ghcr.io/basicimg/nodejs:sid basicimg-hello
    - name: Run test
      run: docker run --rm ghcr.io/basicimg/nodejs:sid /bin/sh -euxc 'mkdir app &&
        cd app && npm install express'
  nodejs_void-glibc:
    name: nodejs/void-glibc
    needs:
    - void_glibc
    permissions:
      contents: read
      packages: write
    runs-on: ubuntu-22.04
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Login to container registry
      uses: docker/login-action@v2
      with:
        password: ${{ secrets.GITHUB_TOKEN }}
        registry: ghcr.io
        username: ${{ github.actor }}
    - id: meta
      name: Generate metadata
      uses: docker/metadata-action@v4
      with:
        images: dummy
        labels: ''
    - name: Build and push image
      uses: docker/build-push-action@v4
      with:
        cache-from: type=gha
        cache-to: type=gha,mode=max
        file: ./nodejs/void-glibc/Dockerfile
        labels: ${{ steps.meta.outputs.labels }}
        push: true
        tags: ghcr.io/basicimg/nodejs:void-glibc,ghcr.io/basicimg/nodejs:void
    - name: Run `basicimg-hello`
      run: docker run --rm ghcr.io/basicimg/nodejs:void-glibc basicimg-hello
    - name: Run test
      run: docker run --rm ghcr.io/basicimg/nodejs:void-glibc /bin/sh -euxc 'mkdir
        app && cd app && npm install express'
  nodejs_void-musl:
    name: nodejs/void-musl
    needs:
    - void_musl
    permissions:
      contents: read
      packages: write
    runs-on: ubuntu-22.04
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Login to container registry
      uses: docker/login-action@v2
      with:
        password: ${{ secrets.GITHUB_TOKEN }}
        registry: ghcr.io
        username: ${{ github.actor }}
    - id: meta
      name: Generate metadata
      uses: docker/metadata-action@v4
      with:
        images: dummy
        labels: ''
    - name: Build and push image
      uses: docker/build-push-action@v4
      with:
        cache-from: type=gha
        cache-to: type=gha,mode=max
        file: ./nodejs/void-musl/Dockerfile
        labels: ${{ steps.meta.outputs.labels }}
        push: true
        tags: ghcr.io/basicimg/nodejs:void-musl
    - name: Run `basicimg-hello`
      run: docker run --rm ghcr.io/basicimg/nodejs:void-musl basicimg-hello
    - name: Run test
      run: docker run --rm ghcr.io/basicimg/nodejs:void-musl /bin/sh -euxc 'mkdir
        app && cd app && npm install express'
  python3_alpine-3_17:
    name: python3/alpine-3.17
    needs:
    - alpine_3_17
    permissions:
      contents: read
      packages: write
    runs-on: ubuntu-22.04
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Login to container registry
      uses: docker/login-action@v2
      with:
        password: ${{ secrets.GITHUB_TOKEN }}
        registry: ghcr.io
        username: ${{ github.actor }}
    - id: meta
      name: Generate metadata
      uses: docker/metadata-action@v4
      with:
        images: dummy
        labels: ''
    - name: Build and push image
      uses: docker/build-push-action@v4
      with:
        cache-from: type=gha
        cache-to: type=gha,mode=max
        file: ./python3/alpine-3.17/Dockerfile
        labels: ${{ steps.meta.outputs.labels }}
        push: true
        tags: ghcr.io/basicimg/python3:alpine-3-17,ghcr.io/basicimg/python3:alpine
    - name: Run `basicimg-hello`
      run: docker run --rm ghcr.io/basicimg/python3:alpine-3-17 basicimg-hello
    - name: Run test
      run: docker run --rm ghcr.io/basicimg/python3:alpine-3-17 /bin/sh -euxc 'pip
        install pyyaml'
  python3_alpine-edge:
    name: python3/alpine-edge
    needs:
    - alpine_edge
    permissions:
      contents: read
      packages: write
    runs-on: ubuntu-22.04
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Login to container registry
      uses: docker/login-action@v2
      with:
        password: ${{ secrets.GITHUB_TOKEN }}
        registry: ghcr.io
        username: ${{ github.actor }}
    - id: meta
      name: Generate metadata
      uses: docker/metadata-action@v4
      with:
        images: dummy
        labels: ''
    - name: Build and push image
      uses: docker/build-push-action@v4
      with:
        cache-from: type=gha
        cache-to: type=gha,mode=max
        file: ./python3/alpine-edge/Dockerfile
        labels: ${{ steps.meta.outputs.labels }}
        push: true
        tags: ghcr.io/basicimg/python3:alpine-edge
    - name: Run `basicimg-hello`
      run: docker run --rm ghcr.io/basicimg/python3:alpine-edge basicimg-hello
    - name: Run test
      run: docker run --rm ghcr.io/basicimg/python3:alpine-edge /bin/sh -euxc 'pip
        install pyyaml'
  python3_arch:
    name: python3/arch
    needs:
    - arch
    permissions:
      contents: read
      packages: write
    runs-on: ubuntu-22.04
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Login to container registry
      uses: docker/login-action@v2
      with:
        password: ${{ secrets.GITHUB_TOKEN }}
        registry: ghcr.io
        username: ${{ github.actor }}
    - id: meta
      name: Generate metadata
      uses: docker/metadata-action@v4
      with:
        images: dummy
        labels: ''
    - name: Build and push image
      uses: docker/build-push-action@v4
      with:
        cache-from: type=gha
        cache-to: type=gha,mode=max
        file: ./python3/arch/Dockerfile
        labels: ${{ steps.meta.outputs.labels }}
        push: true
        tags: ghcr.io/basicimg/python3:arch
    - name: Run `basicimg-hello`
      run: docker run --rm ghcr.io/basicimg/python3:arch basicimg-hello
    - name: Run test
      run: docker run --rm ghcr.io/basicimg/python3:arch /bin/sh -euxc 'pip install
        pyyaml'
  python3_bookworm:
    name: python3/bookworm
    needs:
    - debian_bookworm
    permissions:
      contents: read
      packages: write
    runs-on: ubuntu-22.04
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Login to container registry
      uses: docker/login-action@v2
      with:
        password: ${{ secrets.GITHUB_TOKEN }}
        registry: ghcr.io
        username: ${{ github.actor }}
    - id: meta
      name: Generate metadata
      uses: docker/metadata-action@v4
      with:
        images: dummy
        labels: ''
    - name: Build and push image
      uses: docker/build-push-action@v4
      with:
        cache-from: type=gha
        cache-to: type=gha,mode=max
        file: ./python3/bookworm/Dockerfile
        labels: ${{ steps.meta.outputs.labels }}
        push: true
        tags: ghcr.io/basicimg/python3:bookworm,ghcr.io/basicimg/python3:debian-testing
    - name: Run `basicimg-hello`
      run: docker run --rm ghcr.io/basicimg/python3:bookworm basicimg-hello
    - name: Run test
      run: docker run --rm ghcr.io/basicimg/python3:bookworm /bin/sh -euxc 'pip install
        pyyaml'
  python3_bullseye:
    name: python3/bullseye
    needs:
    - debian_bullseye
    permissions:
      contents: read
      packages: write
    runs-on: ubuntu-22.04
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Login to container registry
      uses: docker/login-action@v2
      with:
        password: ${{ secrets.GITHUB_TOKEN }}
        registry: ghcr.io
        username: ${{ github.actor }}
    - id: meta
      name: Generate metadata
      uses: docker/metadata-action@v4
      with:
        images: dummy
        labels: ''
    - name: Build and push image
      uses: docker/build-push-action@v4
      with:
        cache-from: type=gha
        cache-to: type=gha,mode=max
        file: ./python3/bullseye/Dockerfile
        labels: ${{ steps.meta.outputs.labels }}
        push: true
        tags: ghcr.io/basicimg/python3:bullseye,ghcr.io/basicimg/python3:debian-stable,ghcr.io/basicimg/python3:debian,ghcr.io/basicimg/python3:latest
    - name: Run `basicimg-hello`
      run: docker run --rm ghcr.io/basicimg/python3:bullseye basicimg-hello
    - name: Run test
      run: docker run --rm ghcr.io/basicimg/python3:bullseye /bin/sh -euxc 'pip install
        pyyaml'
  python3_buster:
    name: python3/buster
    needs:
    - debian_buster
    permissions:
      contents: read
      packages: write
    runs-on: ubuntu-22.04
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Login to container registry
      uses: docker/login-action@v2
      with:
        password: ${{ secrets.GITHUB_TOKEN }}
        registry: ghcr.io
        username: ${{ github.actor }}
    - id: meta
      name: Generate metadata
      uses: docker/metadata-action@v4
      with:
        images: dummy
        labels: ''
    - name: Build and push image
      uses: docker/build-push-action@v4
      with:
        cache-from: type=gha
        cache-to: type=gha,mode=max
        file: ./python3/buster/Dockerfile
        labels: ${{ steps.meta.outputs.labels }}
        push: true
        tags: ghcr.io/basicimg/python3:buster,ghcr.io/basicimg/python3:debian-oldstable
    - name: Run `basicimg-hello`
      run: docker run --rm ghcr.io/basicimg/python3:buster basicimg-hello
    - name: Run test
      run: docker run --rm ghcr.io/basicimg/python3:buster /bin/sh -euxc 'pip install
        pyyaml'
  python3_jammy:
    name: python3/jammy
    needs:
    - ubuntu_jammy
    permissions:
      contents: read
      packages: write
    runs-on: ubuntu-22.04
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Login to container registry
      uses: docker/login-action@v2
      with:
        password: ${{ secrets.GITHUB_TOKEN }}
        registry: ghcr.io
        username: ${{ github.actor }}
    - id: meta
      name: Generate metadata
      uses: docker/metadata-action@v4
      with:
        images: dummy
        labels: ''
    - name: Build and push image
      uses: docker/build-push-action@v4
      with:
        cache-from: type=gha
        cache-to: type=gha,mode=max
        file: ./python3/jammy/Dockerfile
        labels: ${{ steps.meta.outputs.labels }}
        push: true
        tags: ghcr.io/basicimg/python3:jammy,ghcr.io/basicimg/python3:ubuntu-lts,ghcr.io/basicimg/python3:ubuntu
    - name: Run `basicimg-hello`
      run: docker run --rm ghcr.io/basicimg/python3:jammy basicimg-hello
    - name: Run test
      run: docker run --rm ghcr.io/basicimg/python3:jammy /bin/sh -euxc 'pip install
        pyyaml'
  python3_kinetic:
    name: python3/kinetic
    needs:
    - ubuntu_kinetic
    permissions:
      contents: read
      packages: write
    runs-on: ubuntu-22.04
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Login to container registry
      uses: docker/login-action@v2
      with:
        password: ${{ secrets.GITHUB_TOKEN }}
        registry: ghcr.io
        username: ${{ github.actor }}
    - id: meta
      name: Generate metadata
      uses: docker/metadata-action@v4
      with:
        images: dummy
        labels: ''
    - name: Build and push image
      uses: docker/build-push-action@v4
      with:
        cache-from: type=gha
        cache-to: type=gha,mode=max
        file: ./python3/kinetic/Dockerfile
        labels: ${{ steps.meta.outputs.labels }}
        push: true
        tags: ghcr.io/basicimg/python3:kinetic,ghcr.io/basicimg/python3:ubuntu-interim
    - name: Run `basicimg-hello`
      run: docker run --rm ghcr.io/basicimg/python3:kinetic basicimg-hello
    - name: Run test
      run: docker run --rm ghcr.io/basicimg/python3:kinetic /bin/sh -euxc 'pip install
        pyyaml'
  python3_lunar:
    name: python3/lunar
    needs:
    - ubuntu_lunar
    permissions:
      contents: read
      packages: write
    runs-on: ubuntu-22.04
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Login to container registry
      uses: docker/login-action@v2
      with:
        password: ${{ secrets.GITHUB_TOKEN }}
        registry: ghcr.io
        username: ${{ github.actor }}
    - id: meta
      name: Generate metadata
      uses: docker/metadata-action@v4
      with:
        images: dummy
        labels: ''
    - name: Build and push image
      uses: docker/build-push-action@v4
      with:
        cache-from: type=gha
        cache-to: type=gha,mode=max
        file: ./python3/lunar/Dockerfile
        labels: ${{ steps.meta.outputs.labels }}
        push: true
        tags: ghcr.io/basicimg/python3:lunar
    - name: Run `basicimg-hello`
      run: docker run --rm ghcr.io/basicimg/python3:lunar basicimg-hello
    - name: Run test
      run: docker run --rm ghcr.io/basicimg/python3:lunar /bin/sh -euxc 'pip install
        pyyaml'
  python3_sid:
    name: python3/sid
    needs:
    - debian_sid
    permissions:
      contents: read
      packages: write
    runs-on: ubuntu-22.04
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Login to container registry
      uses: docker/login-action@v2
      with:
        password: ${{ secrets.GITHUB_TOKEN }}
        registry: ghcr.io
        username: ${{ github.actor }}
    - id: meta
      name: Generate metadata
      uses: docker/metadata-action@v4
      with:
        images: dummy
        labels: ''
    - name: Build and push image
      uses: docker/build-push-action@v4
      with:
        cache-from: type=gha
        cache-to: type=gha,mode=max
        file: ./python3/sid/Dockerfile
        labels: ${{ steps.meta.outputs.labels }}
        push: true
        tags: ghcr.io/basicimg/python3:sid,ghcr.io/basicimg/python3:debian-unstable
    - name: Run `basicimg-hello`
      run: docker run --rm ghcr.io/basicimg/python3:sid basicimg-hello
    - name: Run test
      run: docker run --rm ghcr.io/basicimg/python3:sid /bin/sh -euxc 'pip install
        pyyaml'
  python3_void-glibc:
    name: python3/void-glibc
    needs:
    - void_glibc
    permissions:
      contents: read
      packages: write
    runs-on: ubuntu-22.04
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Login to container registry
      uses: docker/login-action@v2
      with:
        password: ${{ secrets.GITHUB_TOKEN }}
        registry: ghcr.io
        username: ${{ github.actor }}
    - id: meta
      name: Generate metadata
      uses: docker/metadata-action@v4
      with:
        images: dummy
        labels: ''
    - name: Build and push image
      uses: docker/build-push-action@v4
      with:
        cache-from: type=gha
        cache-to: type=gha,mode=max
        file: ./python3/void-glibc/Dockerfile
        labels: ${{ steps.meta.outputs.labels }}
        push: true
        tags: ghcr.io/basicimg/python3:void-glibc,ghcr.io/basicimg/python3:void
    - name: Run `basicimg-hello`
      run: docker run --rm ghcr.io/basicimg/python3:void-glibc basicimg-hello
    - name: Run test
      run: docker run --rm ghcr.io/basicimg/python3:void-glibc /bin/sh -euxc 'pip
        install pyyaml'
  python3_void-musl:
    name: python3/void-musl
    needs:
    - void_musl
    permissions:
      contents: read
      packages: write
    runs-on: ubuntu-22.04
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Login to container registry
      uses: docker/login-action@v2
      with:
        password: ${{ secrets.GITHUB_TOKEN }}
        registry: ghcr.io
        username: ${{ github.actor }}
    - id: meta
      name: Generate metadata
      uses: docker/metadata-action@v4
      with:
        images: dummy
        labels: ''
    - name: Build and push image
      uses: docker/build-push-action@v4
      with:
        cache-from: type=gha
        cache-to: type=gha,mode=max
        file: ./python3/void-musl/Dockerfile
        labels: ${{ steps.meta.outputs.labels }}
        push: true
        tags: ghcr.io/basicimg/python3:void-musl
    - name: Run `basicimg-hello`
      run: docker run --rm ghcr.io/basicimg/python3:void-musl basicimg-hello
    - name: Run test
      run: docker run --rm ghcr.io/basicimg/python3:void-musl /bin/sh -euxc 'pip install
        pyyaml'
  redis_alpine-3_17:
    name: redis/alpine-3.17
    needs:
    - alpine_3_17
    permissions:
      contents: read
      packages: write
    runs-on: ubuntu-22.04
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Login to container registry
      uses: docker/login-action@v2
      with:
        password: ${{ secrets.GITHUB_TOKEN }}
        registry: ghcr.io
        username: ${{ github.actor }}
    - id: meta
      name: Generate metadata
      uses: docker/metadata-action@v4
      with:
        images: dummy
        labels: ''
    - name: Build and push image
      uses: docker/build-push-action@v4
      with:
        cache-from: type=gha
        cache-to: type=gha,mode=max
        file: ./redis/alpine-3.17/Dockerfile
        labels: ${{ steps.meta.outputs.labels }}
        push: true
        tags: ghcr.io/basicimg/redis:alpine-3-17,ghcr.io/basicimg/redis:alpine
    - name: Run `basicimg-hello`
      run: docker run --rm ghcr.io/basicimg/redis:alpine-3-17 basicimg-hello
    - name: Run integration test
      run: docker run -d -p 6379:6379 --name main ghcr.io/basicimg/redis:alpine-3-17
        && docker run --network host --rm ghcr.io/basicimg/redis:alpine-3-17 /bin/sh
        -euxc 'redis-cli info' && docker rm -f main
  redis_alpine-edge:
    name: redis/alpine-edge
    needs:
    - alpine_edge
    permissions:
      contents: read
      packages: write
    runs-on: ubuntu-22.04
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Login to container registry
      uses: docker/login-action@v2
      with:
        password: ${{ secrets.GITHUB_TOKEN }}
        registry: ghcr.io
        username: ${{ github.actor }}
    - id: meta
      name: Generate metadata
      uses: docker/metadata-action@v4
      with:
        images: dummy
        labels: ''
    - name: Build and push image
      uses: docker/build-push-action@v4
      with:
        cache-from: type=gha
        cache-to: type=gha,mode=max
        file: ./redis/alpine-edge/Dockerfile
        labels: ${{ steps.meta.outputs.labels }}
        push: true
        tags: ghcr.io/basicimg/redis:alpine-edge
    - name: Run `basicimg-hello`
      run: docker run --rm ghcr.io/basicimg/redis:alpine-edge basicimg-hello
    - name: Run integration test
      run: docker run -d -p 6379:6379 --name main ghcr.io/basicimg/redis:alpine-edge
        && docker run --network host --rm ghcr.io/basicimg/redis:alpine-edge /bin/sh
        -euxc 'redis-cli info' && docker rm -f main
  redis_arch:
    name: redis/arch
    needs:
    - arch
    permissions:
      contents: read
      packages: write
    runs-on: ubuntu-22.04
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Login to container registry
      uses: docker/login-action@v2
      with:
        password: ${{ secrets.GITHUB_TOKEN }}
        registry: ghcr.io
        username: ${{ github.actor }}
    - id: meta
      name: Generate metadata
      uses: docker/metadata-action@v4
      with:
        images: dummy
        labels: ''
    - name: Build and push image
      uses: docker/build-push-action@v4
      with:
        cache-from: type=gha
        cache-to: type=gha,mode=max
        file: ./redis/arch/Dockerfile
        labels: ${{ steps.meta.outputs.labels }}
        push: true
        tags: ghcr.io/basicimg/redis:arch
    - name: Run `basicimg-hello`
      run: docker run --rm ghcr.io/basicimg/redis:arch basicimg-hello
    - name: Run integration test
      run: docker run -d -p 6379:6379 --name main ghcr.io/basicimg/redis:arch && docker
        run --network host --rm ghcr.io/basicimg/redis:arch /bin/sh -euxc 'redis-cli
        info' && docker rm -f main
  redis_bookworm:
    name: redis/bookworm
    needs:
    - debian_bookworm
    permissions:
      contents: read
      packages: write
    runs-on: ubuntu-22.04
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Login to container registry
      uses: docker/login-action@v2
      with:
        password: ${{ secrets.GITHUB_TOKEN }}
        registry: ghcr.io
        username: ${{ github.actor }}
    - id: meta
      name: Generate metadata
      uses: docker/metadata-action@v4
      with:
        images: dummy
        labels: ''
    - name: Build and push image
      uses: docker/build-push-action@v4
      with:
        cache-from: type=gha
        cache-to: type=gha,mode=max
        file: ./redis/bookworm/Dockerfile
        labels: ${{ steps.meta.outputs.labels }}
        push: true
        tags: ghcr.io/basicimg/redis:bookworm,ghcr.io/basicimg/redis:debian-testing
    - name: Run `basicimg-hello`
      run: docker run --rm ghcr.io/basicimg/redis:bookworm basicimg-hello
    - name: Run integration test
      run: docker run -d -p 6379:6379 --name main ghcr.io/basicimg/redis:bookworm
        && docker run --network host --rm ghcr.io/basicimg/redis:bookworm /bin/sh
        -euxc 'redis-cli info' && docker rm -f main
  redis_bullseye:
    name: redis/bullseye
    needs:
    - debian_bullseye
    permissions:
      contents: read
      packages: write
    runs-on: ubuntu-22.04
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Login to container registry
      uses: docker/login-action@v2
      with:
        password: ${{ secrets.GITHUB_TOKEN }}
        registry: ghcr.io
        username: ${{ github.actor }}
    - id: meta
      name: Generate metadata
      uses: docker/metadata-action@v4
      with:
        images: dummy
        labels: ''
    - name: Build and push image
      uses: docker/build-push-action@v4
      with:
        cache-from: type=gha
        cache-to: type=gha,mode=max
        file: ./redis/bullseye/Dockerfile
        labels: ${{ steps.meta.outputs.labels }}
        push: true
        tags: ghcr.io/basicimg/redis:bullseye,ghcr.io/basicimg/redis:debian-stable,ghcr.io/basicimg/redis:debian,ghcr.io/basicimg/redis:latest
    - name: Run `basicimg-hello`
      run: docker run --rm ghcr.io/basicimg/redis:bullseye basicimg-hello
    - name: Run integration test
      run: docker run -d -p 6379:6379 --name main ghcr.io/basicimg/redis:bullseye
        && docker run --network host --rm ghcr.io/basicimg/redis:bullseye /bin/sh
        -euxc 'redis-cli info' && docker rm -f main
  redis_buster:
    name: redis/buster
    needs:
    - debian_buster
    permissions:
      contents: read
      packages: write
    runs-on: ubuntu-22.04
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Login to container registry
      uses: docker/login-action@v2
      with:
        password: ${{ secrets.GITHUB_TOKEN }}
        registry: ghcr.io
        username: ${{ github.actor }}
    - id: meta
      name: Generate metadata
      uses: docker/metadata-action@v4
      with:
        images: dummy
        labels: ''
    - name: Build and push image
      uses: docker/build-push-action@v4
      with:
        cache-from: type=gha
        cache-to: type=gha,mode=max
        file: ./redis/buster/Dockerfile
        labels: ${{ steps.meta.outputs.labels }}
        push: true
        tags: ghcr.io/basicimg/redis:buster,ghcr.io/basicimg/redis:debian-oldstable
    - name: Run `basicimg-hello`
      run: docker run --rm ghcr.io/basicimg/redis:buster basicimg-hello
    - name: Run integration test
      run: docker run -d -p 6379:6379 --name main ghcr.io/basicimg/redis:buster &&
        docker run --network host --rm ghcr.io/basicimg/redis:buster /bin/sh -euxc
        'redis-cli info' && docker rm -f main
  redis_jammy:
    name: redis/jammy
    needs:
    - ubuntu_jammy
    permissions:
      contents: read
      packages: write
    runs-on: ubuntu-22.04
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Login to container registry
      uses: docker/login-action@v2
      with:
        password: ${{ secrets.GITHUB_TOKEN }}
        registry: ghcr.io
        username: ${{ github.actor }}
    - id: meta
      name: Generate metadata
      uses: docker/metadata-action@v4
      with:
        images: dummy
        labels: ''
    - name: Build and push image
      uses: docker/build-push-action@v4
      with:
        cache-from: type=gha
        cache-to: type=gha,mode=max
        file: ./redis/jammy/Dockerfile
        labels: ${{ steps.meta.outputs.labels }}
        push: true
        tags: ghcr.io/basicimg/redis:jammy,ghcr.io/basicimg/redis:ubuntu-lts,ghcr.io/basicimg/redis:ubuntu
    - name: Run `basicimg-hello`
      run: docker run --rm ghcr.io/basicimg/redis:jammy basicimg-hello
    - name: Run integration test
      run: docker run -d -p 6379:6379 --name main ghcr.io/basicimg/redis:jammy &&
        docker run --network host --rm ghcr.io/basicimg/redis:jammy /bin/sh -euxc
        'redis-cli info' && docker rm -f main
  redis_kinetic:
    name: redis/kinetic
    needs:
    - ubuntu_kinetic
    permissions:
      contents: read
      packages: write
    runs-on: ubuntu-22.04
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Login to container registry
      uses: docker/login-action@v2
      with:
        password: ${{ secrets.GITHUB_TOKEN }}
        registry: ghcr.io
        username: ${{ github.actor }}
    - id: meta
      name: Generate metadata
      uses: docker/metadata-action@v4
      with:
        images: dummy
        labels: ''
    - name: Build and push image
      uses: docker/build-push-action@v4
      with:
        cache-from: type=gha
        cache-to: type=gha,mode=max
        file: ./redis/kinetic/Dockerfile
        labels: ${{ steps.meta.outputs.labels }}
        push: true
        tags: ghcr.io/basicimg/redis:kinetic,ghcr.io/basicimg/redis:ubuntu-interim
    - name: Run `basicimg-hello`
      run: docker run --rm ghcr.io/basicimg/redis:kinetic basicimg-hello
    - name: Run integration test
      run: docker run -d -p 6379:6379 --name main ghcr.io/basicimg/redis:kinetic &&
        docker run --network host --rm ghcr.io/basicimg/redis:kinetic /bin/sh -euxc
        'redis-cli info' && docker rm -f main
  redis_lunar:
    name: redis/lunar
    needs:
    - ubuntu_lunar
    permissions:
      contents: read
      packages: write
    runs-on: ubuntu-22.04
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Login to container registry
      uses: docker/login-action@v2
      with:
        password: ${{ secrets.GITHUB_TOKEN }}
        registry: ghcr.io
        username: ${{ github.actor }}
    - id: meta
      name: Generate metadata
      uses: docker/metadata-action@v4
      with:
        images: dummy
        labels: ''
    - name: Build and push image
      uses: docker/build-push-action@v4
      with:
        cache-from: type=gha
        cache-to: type=gha,mode=max
        file: ./redis/lunar/Dockerfile
        labels: ${{ steps.meta.outputs.labels }}
        push: true
        tags: ghcr.io/basicimg/redis:lunar
    - name: Run `basicimg-hello`
      run: docker run --rm ghcr.io/basicimg/redis:lunar basicimg-hello
    - name: Run integration test
      run: docker run -d -p 6379:6379 --name main ghcr.io/basicimg/redis:lunar &&
        docker run --network host --rm ghcr.io/basicimg/redis:lunar /bin/sh -euxc
        'redis-cli info' && docker rm -f main
  redis_sid:
    name: redis/sid
    needs:
    - debian_sid
    permissions:
      contents: read
      packages: write
    runs-on: ubuntu-22.04
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Login to container registry
      uses: docker/login-action@v2
      with:
        password: ${{ secrets.GITHUB_TOKEN }}
        registry: ghcr.io
        username: ${{ github.actor }}
    - id: meta
      name: Generate metadata
      uses: docker/metadata-action@v4
      with:
        images: dummy
        labels: ''
    - name: Build and push image
      uses: docker/build-push-action@v4
      with:
        cache-from: type=gha
        cache-to: type=gha,mode=max
        file: ./redis/sid/Dockerfile
        labels: ${{ steps.meta.outputs.labels }}
        push: true
        tags: ghcr.io/basicimg/redis:sid,ghcr.io/basicimg/redis:debian-unstable
    - name: Run `basicimg-hello`
      run: docker run --rm ghcr.io/basicimg/redis:sid basicimg-hello
    - name: Run integration test
      run: docker run -d -p 6379:6379 --name main ghcr.io/basicimg/redis:sid && docker
        run --network host --rm ghcr.io/basicimg/redis:sid /bin/sh -euxc 'redis-cli
        info' && docker rm -f main
  redis_void-glibc:
    name: redis/void-glibc
    needs:
    - void_glibc
    permissions:
      contents: read
      packages: write
    runs-on: ubuntu-22.04
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Login to container registry
      uses: docker/login-action@v2
      with:
        password: ${{ secrets.GITHUB_TOKEN }}
        registry: ghcr.io
        username: ${{ github.actor }}
    - id: meta
      name: Generate metadata
      uses: docker/metadata-action@v4
      with:
        images: dummy
        labels: ''
    - name: Build and push image
      uses: docker/build-push-action@v4
      with:
        cache-from: type=gha
        cache-to: type=gha,mode=max
        file: ./redis/void-glibc/Dockerfile
        labels: ${{ steps.meta.outputs.labels }}
        push: true
        tags: ghcr.io/basicimg/redis:void-glibc,ghcr.io/basicimg/redis:void
    - name: Run `basicimg-hello`
      run: docker run --rm ghcr.io/basicimg/redis:void-glibc basicimg-hello
    - name: Run integration test
      run: docker run -d -p 6379:6379 --name main ghcr.io/basicimg/redis:void-glibc
        && docker run --network host --rm ghcr.io/basicimg/redis:void-glibc /bin/sh
        -euxc 'redis-cli info' && docker rm -f main
  redis_void-musl:
    name: redis/void-musl
    needs:
    - void_musl
    permissions:
      contents: read
      packages: write
    runs-on: ubuntu-22.04
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Login to container registry
      uses: docker/login-action@v2
      with:
        password: ${{ secrets.GITHUB_TOKEN }}
        registry: ghcr.io
        username: ${{ github.actor }}
    - id: meta
      name: Generate metadata
      uses: docker/metadata-action@v4
      with:
        images: dummy
        labels: ''
    - name: Build and push image
      uses: docker/build-push-action@v4
      with:
        cache-from: type=gha
        cache-to: type=gha,mode=max
        file: ./redis/void-musl/Dockerfile
        labels: ${{ steps.meta.outputs.labels }}
        push: true
        tags: ghcr.io/basicimg/redis:void-musl
    - name: Run `basicimg-hello`
      run: docker run --rm ghcr.io/basicimg/redis:void-musl basicimg-hello
    - name: Run integration test
      run: docker run -d -p 6379:6379 --name main ghcr.io/basicimg/redis:void-musl
        && docker run --network host --rm ghcr.io/basicimg/redis:void-musl /bin/sh
        -euxc 'redis-cli info' && docker rm -f main
  ruby_alpine-3_17:
    name: ruby/alpine-3.17
    needs:
    - alpine_3_17
    permissions:
      contents: read
      packages: write
    runs-on: ubuntu-22.04
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Login to container registry
      uses: docker/login-action@v2
      with:
        password: ${{ secrets.GITHUB_TOKEN }}
        registry: ghcr.io
        username: ${{ github.actor }}
    - id: meta
      name: Generate metadata
      uses: docker/metadata-action@v4
      with:
        images: dummy
        labels: ''
    - name: Build and push image
      uses: docker/build-push-action@v4
      with:
        cache-from: type=gha
        cache-to: type=gha,mode=max
        file: ./ruby/alpine-3.17/Dockerfile
        labels: ${{ steps.meta.outputs.labels }}
        push: true
        tags: ghcr.io/basicimg/ruby:alpine-3-17,ghcr.io/basicimg/ruby:alpine
    - name: Run `basicimg-hello`
      run: docker run --rm ghcr.io/basicimg/ruby:alpine-3-17 basicimg-hello
    - name: Run test
      run: docker run --rm ghcr.io/basicimg/ruby:alpine-3-17 /bin/sh -euxc 'gem install
        bundler'
  ruby_alpine-edge:
    name: ruby/alpine-edge
    needs:
    - alpine_edge
    permissions:
      contents: read
      packages: write
    runs-on: ubuntu-22.04
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Login to container registry
      uses: docker/login-action@v2
      with:
        password: ${{ secrets.GITHUB_TOKEN }}
        registry: ghcr.io
        username: ${{ github.actor }}
    - id: meta
      name: Generate metadata
      uses: docker/metadata-action@v4
      with:
        images: dummy
        labels: ''
    - name: Build and push image
      uses: docker/build-push-action@v4
      with:
        cache-from: type=gha
        cache-to: type=gha,mode=max
        file: ./ruby/alpine-edge/Dockerfile
        labels: ${{ steps.meta.outputs.labels }}
        push: true
        tags: ghcr.io/basicimg/ruby:alpine-edge
    - name: Run `basicimg-hello`
      run: docker run --rm ghcr.io/basicimg/ruby:alpine-edge basicimg-hello
    - name: Run test
      run: docker run --rm ghcr.io/basicimg/ruby:alpine-edge /bin/sh -euxc 'gem install
        bundler'
  ruby_arch:
    name: ruby/arch
    needs:
    - arch
    permissions:
      contents: read
      packages: write
    runs-on: ubuntu-22.04
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Login to container registry
      uses: docker/login-action@v2
      with:
        password: ${{ secrets.GITHUB_TOKEN }}
        registry: ghcr.io
        username: ${{ github.actor }}
    - id: meta
      name: Generate metadata
      uses: docker/metadata-action@v4
      with:
        images: dummy
        labels: ''
    - name: Build and push image
      uses: docker/build-push-action@v4
      with:
        cache-from: type=gha
        cache-to: type=gha,mode=max
        file: ./ruby/arch/Dockerfile
        labels: ${{ steps.meta.outputs.labels }}
        push: true
        tags: ghcr.io/basicimg/ruby:arch
    - name: Run `basicimg-hello`
      run: docker run --rm ghcr.io/basicimg/ruby:arch basicimg-hello
    - name: Run test
      run: docker run --rm ghcr.io/basicimg/ruby:arch /bin/sh -euxc 'gem install bundler'
  ruby_bookworm:
    name: ruby/bookworm
    needs:
    - debian_bookworm
    permissions:
      contents: read
      packages: write
    runs-on: ubuntu-22.04
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Login to container registry
      uses: docker/login-action@v2
      with:
        password: ${{ secrets.GITHUB_TOKEN }}
        registry: ghcr.io
        username: ${{ github.actor }}
    - id: meta
      name: Generate metadata
      uses: docker/metadata-action@v4
      with:
        images: dummy
        labels: ''
    - name: Build and push image
      uses: docker/build-push-action@v4
      with:
        cache-from: type=gha
        cache-to: type=gha,mode=max
        file: ./ruby/bookworm/Dockerfile
        labels: ${{ steps.meta.outputs.labels }}
        push: true
        tags: ghcr.io/basicimg/ruby:bookworm,ghcr.io/basicimg/ruby:debian-testing
    - name: Run `basicimg-hello`
      run: docker run --rm ghcr.io/basicimg/ruby:bookworm basicimg-hello
    - name: Run test
      run: docker run --rm ghcr.io/basicimg/ruby:bookworm /bin/sh -euxc 'gem install
        bundler'
  ruby_bullseye:
    name: ruby/bullseye
    needs:
    - debian_bullseye
    permissions:
      contents: read
      packages: write
    runs-on: ubuntu-22.04
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Login to container registry
      uses: docker/login-action@v2
      with:
        password: ${{ secrets.GITHUB_TOKEN }}
        registry: ghcr.io
        username: ${{ github.actor }}
    - id: meta
      name: Generate metadata
      uses: docker/metadata-action@v4
      with:
        images: dummy
        labels: ''
    - name: Build and push image
      uses: docker/build-push-action@v4
      with:
        cache-from: type=gha
        cache-to: type=gha,mode=max
        file: ./ruby/bullseye/Dockerfile
        labels: ${{ steps.meta.outputs.labels }}
        push: true
        tags: ghcr.io/basicimg/ruby:bullseye,ghcr.io/basicimg/ruby:debian-stable,ghcr.io/basicimg/ruby:debian,ghcr.io/basicimg/ruby:latest
    - name: Run `basicimg-hello`
      run: docker run --rm ghcr.io/basicimg/ruby:bullseye basicimg-hello
    - name: Run test
      run: docker run --rm ghcr.io/basicimg/ruby:bullseye /bin/sh -euxc 'gem install
        bundler'
  ruby_buster:
    name: ruby/buster
    needs:
    - debian_buster
    permissions:
      contents: read
      packages: write
    runs-on: ubuntu-22.04
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Login to container registry
      uses: docker/login-action@v2
      with:
        password: ${{ secrets.GITHUB_TOKEN }}
        registry: ghcr.io
        username: ${{ github.actor }}
    - id: meta
      name: Generate metadata
      uses: docker/metadata-action@v4
      with:
        images: dummy
        labels: ''
    - name: Build and push image
      uses: docker/build-push-action@v4
      with:
        cache-from: type=gha
        cache-to: type=gha,mode=max
        file: ./ruby/buster/Dockerfile
        labels: ${{ steps.meta.outputs.labels }}
        push: true
        tags: ghcr.io/basicimg/ruby:buster,ghcr.io/basicimg/ruby:debian-oldstable
    - name: Run `basicimg-hello`
      run: docker run --rm ghcr.io/basicimg/ruby:buster basicimg-hello
    - name: Run test
      run: docker run --rm ghcr.io/basicimg/ruby:buster /bin/sh -euxc 'gem install
        bundler -v 2.3.26'
  ruby_jammy:
    name: ruby/jammy
    needs:
    - ubuntu_jammy
    permissions:
      contents: read
      packages: write
    runs-on: ubuntu-22.04
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Login to container registry
      uses: docker/login-action@v2
      with:
        password: ${{ secrets.GITHUB_TOKEN }}
        registry: ghcr.io
        username: ${{ github.actor }}
    - id: meta
      name: Generate metadata
      uses: docker/metadata-action@v4
      with:
        images: dummy
        labels: ''
    - name: Build and push image
      uses: docker/build-push-action@v4
      with:
        cache-from: type=gha
        cache-to: type=gha,mode=max
        file: ./ruby/jammy/Dockerfile
        labels: ${{ steps.meta.outputs.labels }}
        push: true
        tags: ghcr.io/basicimg/ruby:jammy,ghcr.io/basicimg/ruby:ubuntu-lts,ghcr.io/basicimg/ruby:ubuntu
    - name: Run `basicimg-hello`
      run: docker run --rm ghcr.io/basicimg/ruby:jammy basicimg-hello
    - name: Run test
      run: docker run --rm ghcr.io/basicimg/ruby:jammy /bin/sh -euxc 'gem install
        bundler'
  ruby_kinetic:
    name: ruby/kinetic
    needs:
    - ubuntu_kinetic
    permissions:
      contents: read
      packages: write
    runs-on: ubuntu-22.04
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Login to container registry
      uses: docker/login-action@v2
      with:
        password: ${{ secrets.GITHUB_TOKEN }}
        registry: ghcr.io
        username: ${{ github.actor }}
    - id: meta
      name: Generate metadata
      uses: docker/metadata-action@v4
      with:
        images: dummy
        labels: ''
    - name: Build and push image
      uses: docker/build-push-action@v4
      with:
        cache-from: type=gha
        cache-to: type=gha,mode=max
        file: ./ruby/kinetic/Dockerfile
        labels: ${{ steps.meta.outputs.labels }}
        push: true
        tags: ghcr.io/basicimg/ruby:kinetic,ghcr.io/basicimg/ruby:ubuntu-interim
    - name: Run `basicimg-hello`
      run: docker run --rm ghcr.io/basicimg/ruby:kinetic basicimg-hello
    - name: Run test
      run: docker run --rm ghcr.io/basicimg/ruby:kinetic /bin/sh -euxc 'gem install
        bundler'
  ruby_lunar:
    name: ruby/lunar
    needs:
    - ubuntu_lunar
    permissions:
      contents: read
      packages: write
    runs-on: ubuntu-22.04
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Login to container registry
      uses: docker/login-action@v2
      with:
        password: ${{ secrets.GITHUB_TOKEN }}
        registry: ghcr.io
        username: ${{ github.actor }}
    - id: meta
      name: Generate metadata
      uses: docker/metadata-action@v4
      with:
        images: dummy
        labels: ''
    - name: Build and push image
      uses: docker/build-push-action@v4
      with:
        cache-from: type=gha
        cache-to: type=gha,mode=max
        file: ./ruby/lunar/Dockerfile
        labels: ${{ steps.meta.outputs.labels }}
        push: true
        tags: ghcr.io/basicimg/ruby:lunar
    - name: Run `basicimg-hello`
      run: docker run --rm ghcr.io/basicimg/ruby:lunar basicimg-hello
    - name: Run test
      run: docker run --rm ghcr.io/basicimg/ruby:lunar /bin/sh -euxc 'gem install
        bundler'
  ruby_sid:
    name: ruby/sid
    needs:
    - debian_sid
    permissions:
      contents: read
      packages: write
    runs-on: ubuntu-22.04
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Login to container registry
      uses: docker/login-action@v2
      with:
        password: ${{ secrets.GITHUB_TOKEN }}
        registry: ghcr.io
        username: ${{ github.actor }}
    - id: meta
      name: Generate metadata
      uses: docker/metadata-action@v4
      with:
        images: dummy
        labels: ''
    - name: Build and push image
      uses: docker/build-push-action@v4
      with:
        cache-from: type=gha
        cache-to: type=gha,mode=max
        file: ./ruby/sid/Dockerfile
        labels: ${{ steps.meta.outputs.labels }}
        push: true
        tags: ghcr.io/basicimg/ruby:sid,ghcr.io/basicimg/ruby:debian-unstable
    - name: Run `basicimg-hello`
      run: docker run --rm ghcr.io/basicimg/ruby:sid basicimg-hello
    - name: Run test
      run: docker run --rm ghcr.io/basicimg/ruby:sid /bin/sh -euxc 'gem install bundler'
  ruby_void-glibc:
    name: ruby/void-glibc
    needs:
    - void_glibc
    permissions:
      contents: read
      packages: write
    runs-on: ubuntu-22.04
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Login to container registry
      uses: docker/login-action@v2
      with:
        password: ${{ secrets.GITHUB_TOKEN }}
        registry: ghcr.io
        username: ${{ github.actor }}
    - id: meta
      name: Generate metadata
      uses: docker/metadata-action@v4
      with:
        images: dummy
        labels: ''
    - name: Build and push image
      uses: docker/build-push-action@v4
      with:
        cache-from: type=gha
        cache-to: type=gha,mode=max
        file: ./ruby/void-glibc/Dockerfile
        labels: ${{ steps.meta.outputs.labels }}
        push: true
        tags: ghcr.io/basicimg/ruby:void-glibc,ghcr.io/basicimg/ruby:void
    - name: Run `basicimg-hello`
      run: docker run --rm ghcr.io/basicimg/ruby:void-glibc basicimg-hello
    - name: Run test
      run: docker run --rm ghcr.io/basicimg/ruby:void-glibc /bin/sh -euxc 'gem install
        bundler'
  ruby_void-musl:
    name: ruby/void-musl
    needs:
    - void_musl
    permissions:
      contents: read
      packages: write
    runs-on: ubuntu-22.04
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Login to container registry
      uses: docker/login-action@v2
      with:
        password: ${{ secrets.GITHUB_TOKEN }}
        registry: ghcr.io
        username: ${{ github.actor }}
    - id: meta
      name: Generate metadata
      uses: docker/metadata-action@v4
      with:
        images: dummy
        labels: ''
    - name: Build and push image
      uses: docker/build-push-action@v4
      with:
        cache-from: type=gha
        cache-to: type=gha,mode=max
        file: ./ruby/void-musl/Dockerfile
        labels: ${{ steps.meta.outputs.labels }}
        push: true
        tags: ghcr.io/basicimg/ruby:void-musl
    - name: Run `basicimg-hello`
      run: docker run --rm ghcr.io/basicimg/ruby:void-musl basicimg-hello
    - name: Run test
      run: docker run --rm ghcr.io/basicimg/ruby:void-musl /bin/sh -euxc 'gem install
        bundler'
  ubuntu_jammy:
    name: ubuntu/jammy
    needs:
    - bootstrap
    permissions:
      contents: read
      packages: write
    runs-on: ubuntu-22.04
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Login to container registry
      uses: docker/login-action@v2
      with:
        password: ${{ secrets.GITHUB_TOKEN }}
        registry: ghcr.io
        username: ${{ github.actor }}
    - id: meta
      name: Generate metadata
      uses: docker/metadata-action@v4
      with:
        images: dummy
        labels: ''
    - name: Build and push image
      uses: docker/build-push-action@v4
      with:
        cache-from: type=gha
        cache-to: type=gha,mode=max
        file: ./ubuntu/jammy/Dockerfile
        labels: ${{ steps.meta.outputs.labels }}
        push: true
        tags: ghcr.io/basicimg/ubuntu:jammy,ghcr.io/basicimg/ubuntu:22-04,ghcr.io/basicimg/ubuntu:lts,ghcr.io/basicimg/ubuntu:latest
    - name: Run `basicimg-hello`
      run: docker run --rm ghcr.io/basicimg/ubuntu:jammy basicimg-hello
    - name: Run test
      run: docker run --rm ghcr.io/basicimg/ubuntu:jammy /bin/sh -euxc 'basicimg-install
        rustc'
  ubuntu_kinetic:
    name: ubuntu/kinetic
    needs:
    - bootstrap
    permissions:
      contents: read
      packages: write
    runs-on: ubuntu-22.04
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Login to container registry
      uses: docker/login-action@v2
      with:
        password: ${{ secrets.GITHUB_TOKEN }}
        registry: ghcr.io
        username: ${{ github.actor }}
    - id: meta
      name: Generate metadata
      uses: docker/metadata-action@v4
      with:
        images: dummy
        labels: ''
    - name: Build and push image
      uses: docker/build-push-action@v4
      with:
        cache-from: type=gha
        cache-to: type=gha,mode=max
        file: ./ubuntu/kinetic/Dockerfile
        labels: ${{ steps.meta.outputs.labels }}
        push: true
        tags: ghcr.io/basicimg/ubuntu:kinetic,ghcr.io/basicimg/ubuntu:22-10,ghcr.io/basicimg/ubuntu:interim
    - name: Run `basicimg-hello`
      run: docker run --rm ghcr.io/basicimg/ubuntu:kinetic basicimg-hello
    - name: Run test
      run: docker run --rm ghcr.io/basicimg/ubuntu:kinetic /bin/sh -euxc 'basicimg-install
        rustc'
  ubuntu_lunar:
    name: ubuntu/lunar
    needs:
    - bootstrap
    permissions:
      contents: read
      packages: write
    runs-on: ubuntu-22.04
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Login to container registry
      uses: docker/login-action@v2
      with:
        password: ${{ secrets.GITHUB_TOKEN }}
        registry: ghcr.io
        username: ${{ github.actor }}
    - id: meta
      name: Generate metadata
      uses: docker/metadata-action@v4
      with:
        images: dummy
        labels: ''
    - name: Build and push image
      uses: docker/build-push-action@v4
      with:
        cache-from: type=gha
        cache-to: type=gha,mode=max
        file: ./ubuntu/lunar/Dockerfile
        labels: ${{ steps.meta.outputs.labels }}
        push: true
        tags: ghcr.io/basicimg/ubuntu:lunar,ghcr.io/basicimg/ubuntu:23-04
    - name: Run `basicimg-hello`
      run: docker run --rm ghcr.io/basicimg/ubuntu:lunar basicimg-hello
    - name: Run test
      run: docker run --rm ghcr.io/basicimg/ubuntu:lunar /bin/sh -euxc 'basicimg-install
        rustc'
  void_glibc:
    name: void/glibc
    needs:
    - bootstrap
    permissions:
      contents: read
      packages: write
    runs-on: ubuntu-22.04
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Login to container registry
      uses: docker/login-action@v2
      with:
        password: ${{ secrets.GITHUB_TOKEN }}
        registry: ghcr.io
        username: ${{ github.actor }}
    - id: meta
      name: Generate metadata
      uses: docker/metadata-action@v4
      with:
        images: dummy
        labels: ''
    - name: Build and push image
      uses: docker/build-push-action@v4
      with:
        cache-from: type=gha
        cache-to: type=gha,mode=max
        file: ./void/glibc/Dockerfile
        labels: ${{ steps.meta.outputs.labels }}
        push: true
        tags: ghcr.io/basicimg/void:glibc,ghcr.io/basicimg/void:latest
    - name: Run `basicimg-hello`
      run: docker run --rm ghcr.io/basicimg/void:glibc basicimg-hello
    - name: Run test
      run: docker run --rm ghcr.io/basicimg/void:glibc /bin/sh -euxc 'basicimg-install
        rust'
  void_musl:
    name: void/musl
    needs:
    - bootstrap
    permissions:
      contents: read
      packages: write
    runs-on: ubuntu-22.04
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Login to container registry
      uses: docker/login-action@v2
      with:
        password: ${{ secrets.GITHUB_TOKEN }}
        registry: ghcr.io
        username: ${{ github.actor }}
    - id: meta
      name: Generate metadata
      uses: docker/metadata-action@v4
      with:
        images: dummy
        labels: ''
    - name: Build and push image
      uses: docker/build-push-action@v4
      with:
        cache-from: type=gha
        cache-to: type=gha,mode=max
        file: ./void/musl/Dockerfile
        labels: ${{ steps.meta.outputs.labels }}
        push: true
        tags: ghcr.io/basicimg/void:musl
    - name: Run `basicimg-hello`
      run: docker run --rm ghcr.io/basicimg/void:musl basicimg-hello
    - name: Run test
      run: docker run --rm ghcr.io/basicimg/void:musl /bin/sh -euxc 'basicimg-install
        rust'
name: build
'on':
  push:
    branches:
    - main
  schedule:
  - cron: 5 4 * * 1
